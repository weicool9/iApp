【uycl 修改状态栏颜色】
用法：
//输入更变颜色，并且保留状态栏空间，并默认设置软键盘
uycl("#50c4e5", true)

//输入更变颜色，并且不保留状态栏空间，并默认设置软键盘
uycl("#50c4e5", false)


//输入更变颜色，并且保留状态栏空间，只设置状态栏，不设置软键盘
uycl("#50c4e5", true, 0)

//输入更变颜色，并且不保留状态栏空间，只设置软键盘，不设置状态栏
uycl("#50c4e5", false, 1)
【动态创建控件集合】

//编辑框
nvw(null, null, "线性布局", "width=-1\nheight=-1", linear)
nvw(null, linear,"编辑框","width=-1\nheight=-2\ntext=\nlayout_marginleft=20dp\nlayout_marginright=20dp",textid)

//MD编辑框
nvw(null, null, "线性布局", "width=-1\nheight=-1\norientation=vertical", linear)
nvw(null, linear,"文本输入布局","width=-1\nheight=-2",edit)
nvw(null, edit,"编辑框","width=-1\nheight=-2\nhint=被替换文本\ntext=\nlayout_marginleft=20dp\nlayout_marginright=20dp",txt1)

nvw(null, linear,"文本输入布局","width=-1\nheight=-2",edit2)
nvw(null, edit2,"编辑框","width=-1\nheight=-2\nhint=替换为\ntext=\nlayout_marginleft=20dp\nlayout_marginright=20dp",txt2)

//拖动条
nvw(null, null, "线性布局", "width=-1\nheight=-1\norientation=vertical\nlayout_marginleft=20dp\nlayout_marginright=20dp",linear)

nvw(null, linear,"文本","width=-2\nheight=-2\ntext=0\ntextcolor=#000000\ntextsize=16dp\nlayout_margintop=10dp\nlayout_marginleft=30dp",ss.txtid)
nvw(null, linear,"拖动条","width=-1\nheight=-2\nlayout_margin=15dp",preid)

//列表
nvw(null, null, "线性布局", "", linear)
nvw(null, linear,"列表","width=-1\nheight=-1\nlayout_marginleft=20dp\nlayout_marginright=20dp",listid)

ula(listdata, 1="abc")
ula(listdata, 1="abc")
ula(listdata, 1="abc")
ula(listdata, 1="abc")
ula(listdata, 1="abc")
ula(listdata, 1="abc")
ula(listdata, 1="abc")
uls(listid, listdata, "list.iyu", -1, -2)

//图片
nvw(null, null, "线性布局", "width=-1\nheight=-1", linear)
nvw(null, linear,"图像","width=-1\nheight=-2\ntext=\nlayout_marginleft=20dp\nlayout_marginright=20dp",picid)

us(picid,"src","@icon_iapp.png")

//按钮
nvw(null, null, "线性布局", "", linear)
nvw(null, linear,"按钮","width=-1\nheight=-2\ntext=\nlayout_marginleft=20dp\nlayout_marginright=20dp",textid)

【首次启动提示】

fe("$dyc.txt",dyc)

//获取文件是否存在

f(dyc=="false")

//判断是否存在

{

//第一次使用时执行

utw(null,"提示","你是第一次使用本软件哦","确定",false,dycs)

{

}

fw("$dyc.txt","yes")

//写入文件不可修改

}


【设置图片圆角】



sbp("图片",bitmap)

java(res,activity,"android.content.Context.getResources")

java(sss.drawable,null,"android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory.*","android.content.res.Resources",res,"android.graphics.Bitmap",bitmap)

java(null,sss.drawable,"android.support.v4.graphics.drawable.RoundedBitmapDrawable.setCornerRadius","float",100)
//圆角度数

us(控件id,"background",sss.drawable)



【设置壁纸】


//初始化包
cls("android.app.WallpaperManager",wm)
cls("android.graphics.Bitmap",bitp)
cls("android.graphics.BitmapFactory",bfy)

//图片路径(/sdcard/+路径)
s path = "/sdcard/iApp/Userimg/icon_iapp.png"
//初始化壁纸工具
javax(Wallm,null,wm,"getInstance","Context",activity)
//初始化图片为Bitmap变量
javax(image,null,bfy,"decodeFile","String",path)
//设置壁纸
javax(null,Wallm,wm,"setBitmap",bitp,image)


【利用Java杀进程】



这是调用了杀死进程的api
第一个java语句是获取本设备的pid
第二个是杀死进程，里面写应用的pid，这里是iapp的所以会自杀
如果要杀别的应用需要
android.permission.KILL_BACKGROUND_PROCESS   自己背下来没毛病_滑稽
这个权限

如果运行后应用闪退或者白屏等为成功了
如果应用打开异常
退了就没问题了
./

//自杀进程
javanew(c,"android.os.Process")
java(id,c,"android.os.Process.myPid")
java(a,c,"android.os.Process.killProcess","int",id)

//杀其它应用进程
//需要权限android.permission.KILL_BACKGROUND_PROCESSES
javags(as,null,"android.content.Context","ACTIVITY_SERVICE")
java(am,activity,"android.app.Activity.getSystemService","String",as)
java(null,am,"android.app.ActivityManager.killBackgroundProcesses","String","com.iapp.app")




【横向列表_V7】


//代码放在uls下面

gvs(4,对象)
cls("android.support.v7.widget.RecyclerView",列表类)
cls("android.support.v7.widget.LinearLayoutManager",布局管理类)
javanew(布局,布局管理类,"Context",activity,"int",0,"boolean",false)
javax(null,对象,列表类,"setLayoutManager","android.support.v7.widget.RecyclerView$LayoutManager",布局)

【判断设备是否存在root权限】


目前判断当前设备是否已root的方法主要有两种
1.判断su文件是否存在，代码很简单我就不讲了
2.获取系统属性ro.secure和ro.adb.secure是否为0
这里贴出代码：
s prop = "ro.secure"
//属性名，ro.secure或ro.adb.secure都可以判断

java(value,null,"android.os.SystemProperties.getInt","String",prop,"int",1)
f(value == 0) {
  tw("当前设备已root")
  } else {
  tw("当前设备无root")
  }

//注：不保证所有设备均可用。




【iApp运行iApp代码】


//Code By kbz
gvs(6,对象)
java(tag,对象,"android.view.View.getTag")
ug(4,"text",代码)
//获取代码
ss("<eventItme type="clicki">\n"+代码+"\n</eventItme>",代码)
//相加
sssz(tag,2,代码)
java(null,对象,"android.view.View.setTag","Object",tag)
//设置按钮6代码
java(状态,对象,"android.view.View.performClick")
//模拟点击按钮6
f(状态)
{
  tw("运行成功")
}
.实际上这个判断基本上没用
.由于目前技术不成熟，部分手机上会出现部分代码运行失败的情况
.针对这种情况，可以联系我修复运行失败的代码
.本人时间很宝贵，酌情收费！
.QQ178772968
.群178772968
.欢迎进群蕉♂流，群文件更多精品源码等你发现

.作者:扛把子


【检测xposed等Hook框架】


//Code By canyie
最近，iapp逆向越来越猖獗，各种方法层出不穷
其实大多数都以进程注入为核心
而Xposed框架和Substrate框架又是这一领域的佼佼者
今天我们就来尝试检测它们


在这之前先声明几个术语
xposed框架：指 rovo89 开发的Java方法劫持框架，核心思想是注入zygote进程
dexposed：指阿里开发的Dalvik上的进程内Java方法劫持框架（不考虑dev_art分支），仅限本进程
epic：指田维术开发的ART上的进程内Java方法劫持框架，仅限本进程
va：指罗迪开发的虚拟环境框架VirtualApp
vxp：指田维术基于va和epic开发的免root享受xposed的软件，核心思想是虚拟化
太极框架：指田维术基于epic开发的无需root体验xposed的软件，核心思想是修改apk（不考虑太极●Magisk版）


//检测方法0：检测XposedInstanller是否存在
//感兴趣的可以看看源码区那个
//只要稍微修改一点点小东西就可以绕过检测了
//不再赘述

//检测方法1：检测Root，感兴趣的可以看看上一篇
//缺点：误杀范围太广，无法检测免root框架等

//方法2：检测是否存在Xposed的核心类，代码如下
cls("de.robv.android.xposed.XposedBridge",klazz)
f(klazz != null) {
  tw("存在 Xposed 环境")
}
//另外，这里可以先尝试禁用一次Xposed
cls("de.robv.android.xposed.XposedBridge",klazz)
f(klazz != null) {
  tw("存在 Xposed 环境")
  javass(disable,null,klazz,"disableHooks",true)
  f(disable) {
    tw("禁用 Xposed 成功")
  } else {
    tw("禁用 Xposed 失败")
  }
}
//绕过检测也很容易，禁止反射xp的核心类即可
//vxp测试失败（由于ClassLoader隔离），真实xp环境应该能用

//方法3：回溯调用栈，判断是否存在xposed的
java(thread,null,"java.lang.Thread.currentThread")
java(stackTrace,thread,"java.lang.Thread.getStackTrace")
s hasHook = false
for(st;stackTrace) {
  java(sts,st,"java.lang.Object.toString")
  f(sts ? "de.robv.android.xposed." || sts ? "me.weishu.epic." || sts ? "me.weishu.exposed.") {
    s hasHook = true
    break
  }
}
f(hasHook) {
  tw("存在Hook框架")
}
//vxp测试失败，如果被hook应该可以

//ps：如果还需要检测va，可加上com.lody.virtual.
//然后就能直接检测vxp
//但是也会把所有使用了va的软件（比如某多开）识别出来

//绕过方法：hook掉这个方法，把关于xp的痕迹全部去掉

//方法4：读取/proc/self/maps检测是否加载过hook框架
fr("/proc/self/maps",maps)
f(maps ? "XposedBridge.jar" || maps ? "libepic.so" || maps ? "libdexposed.so" || maps ? "libsubstrate.so") {
  tw("存在Hook框架")
}
//ps：这里只是演示用，还有很多框架没有检测，感兴趣的可以加上
//依然可以绕过，hook掉IoBridge即可。。。

//----- vxp检测专区 -----

//方法5：检测System.getProperty("vxp")是否为1
//查看vxp的源码可知，vxp启动时会调用System.setProperty("vxp","1")
//那么我们直接获取这个属性判断即可
java(isVxp,null,"java.lang.System.getProperty","String","vxp","String","0")
f(isVxp == "1") {
  tw("vxp环境")
}
//绕过方法非常简单，去掉setProperty就行。。。

//方法6：判断应用私有目录是否在vxp的路径下
java(filesDir,activity,"android.content.Context.getFilesDir")
f(filesDir ? "io.va.exposed") {
  tw("处于vxp环境")
}
//绕过方法依然非常简单。。。


//综上所述，检测hook框架的方法有很多，当然都有方法绕过
//不过现在的逆向插件基本都未做绕过措施
//聊胜于无吧。。。

//未完待续。。。。。。



【操作编辑框文字】


//Code By kbz
gvs(id,编辑框)
//修改为你的编辑框id

java(内容,编辑框,"android.widget.EditText.getText")
java(null,内容,"android.text.Editable.replace","int",开始,"int",结束,"CharSequence",替换内容)
//替换内容
//参数:被替换内容的开始位置 结束位置 替换内容

java(null,内容,"android.text.Editable.delete","int",开始,"int",结束)
//删除内容
//参数:被删除内容的开始位置 结束位置

java(null,内容,"android.text.Editable.insert","int",位置,"CharSequence",内容)
//外指定位置插入内容
//参数:插入位置 插入内容

java(null,内容,"android.text.Editable.append","CharSequence",内容)
//在末尾插入内容
//参数:插入内容

java(null,内容,"android.text.Editable.clear")
//清除内容 直接清除所有内容

//QQ178772968
//有什么不懂的QQ问我
//别再用us来实现这些功能了

.作者：扛把子


【base64加解密】


//Base64编码：
s 原文 = "残页"
java(字节数组,原文,"java.lang.String.getBytes")
//转成byte[]字节数组
java(密文,null,"android.util.Base64.encodeToString","byte[]",字节数组,"int",0)
//Base64编码，0是模式
//如果失败请更改模式
/.
模式列表：
DEFAULT=0
NO_PADDING=1
NO_WRAP=2
CRLF=4
URL_SAFE=8
./
tw(密文)

//base64解码：
s 密文 = "5q6L6aG1"
java(字节数组,null,"android.util.Base64.decode","String",密文,"int",0)
//Base64解码，0是模式
//如果失败请更改模式
javanew(原文,"java.lang.String","byte[]",字节数组)
//由于返回的是byte[]字节数组，所以转化成字符串
tw(原文)

//作者:残页

【状态栏白底黑字】


.iyu

java(cs, activity, "android.app.Activity.getWindow")
java(cs2, cs, "android.view.Window.getDecorView")
java(null, cs2, "android.view.View.setSystemUiVisibility", "int", "8192")
//设置状态栏透明(沉浸式)
java(null, cs, "android.view.Window.addFlags", "int", "67108864")

【输入法模式】


//Code By canyie
.iyu
说明：此代码可以解决输入法弹出的时候遮住你的控件/让布局乱动的问题
//请根据需要，自行修改
s flag = 18
/.
可选值：
0 系统默认，由系统选择显示方式
2 当用户进入时，默认隐藏输入法
4 当用户进入时，默认显示输入法
16 输入法弹出时，调整空白区域来显示输入法。即使调整空白区域，输入法还是有可能遮挡一些有内容区域，这时用户就只有退出输入法才能看到这些被遮挡区域并进行交互。
18 与16相同，但是当用户进入时，默认隐藏输入法
20 与16相同，但是当用户进入时，默认显示输入法
32 输入法弹出时，顶起当前布局（更改布局高度，同时整个布局上移）
34 与32相同，但是当用户进入时，默认隐藏输入法
36 与32相同，但是当用户进入时，默认显示输入法
48 当输入法弹出时，什么也不做，直接让输入法覆盖界面
50 与48相同，但是当用户进入时，默认隐藏输入法
52 与48相同，但是当用户进入时，默认显示输入法
./
java(window,activity,"android.app.Activity.getWindow")
java(null,window,"android.view.Window.setSoftInputMode","int",flag)

【图片黑白化】


//本源码由2669354498提供制作

mian.iyu
sbp("%iApp/Userimg/icon_iapp.png",bitmap)
call(back, "mjava", "photo_outcolor.toGrayScale", bitmap)
us(1,"background",back)


photo_outcolor.mjava

import android.app.*;
import android.graphics.*;
import android.os.*;
import android.widget.*;

//本源码由2669354498提供制作。
public static Bitmap toGrayScale(Bitmap bmpOriginal) {
  int width, height;
  height = bmpOriginal.getHeight();
  width = bmpOriginal.getWidth();
  Bitmap bmpGrayScale = Bitmap.createBitmap(width, height, Bitmap.Config.RGB_565);
  Canvas c = new Canvas(bmpGrayScale);
  Paint paint = new Paint();
  ColorMatrix cm = new ColorMatrix();
  cm.setSaturation(0);
  ColorMatrixColorFilter f = new ColorMatrixColorFilter(cm);
  paint.setColorFilter(f);
  c.drawBitmap(bmpOriginal, 0, 0, paint);
  return bmpGrayScale;
}

【获取文件/文件夹创建时间】


//Code By xiaoyi
mian.iyu
s path = "/storage/emulated/0/iApps/Projects/com.four.books/res/hb.jpg"
call(time,"mlua","get.getDate",path,long,"yyyy-MM-dd HH:mm")
us(3,"text",time)

get.mlua
function getDate(path,long,type)
  require "import"
  import "java.io.*"
  import "java.text.*"
  import "java.util.*"
  file = File(path)
  type = SimpleDateFormat(type)
  return type:format(file:lastModified())
end

【图片转字符图】



//Code By kbz

.iyu
fdir("@a.png",路径)
syso(路径)
//取绝对路径
call(图片,"mjava","转换.createAsciiPic",路径)
us(4,"src",图片)

//QQ178772968
//群178772968


转换.mjava

import android.graphics.*;
import android.view.*;
import android.util.*;
import android.content.*;
import android.text.*;

public static Bitmap createAsciiPic(String path) {
  //final String base = "#8XOHLTI)i=+;:,.";// 字符串由复杂到简单
  final String base = "#";
  // 字符串由复杂到简单
  StringBuilder text = new StringBuilder();
  WindowManager wm = (WindowManager) activity.getSystemService(Context.WINDOW_SERVICE);
  DisplayMetrics dm = new DisplayMetrics();
  wm.getDefaultDisplay().getMetrics(dm);
  int width = dm.widthPixels;
  int height = dm.heightPixels;
  Bitmap image = BitmapFactory.decodeFile(path); //读取图片
  int width0 = image.getWidth();
  int height0 = image.getHeight();
  int width1, height1;
  int scale = 7;
  if (width0 <= width / scale) {
    width1 = width0;
    height1 = height0;
  } else {
    width1 = width / scale;
    height1 = width1 * height0 / width0;
  }

  image = scale(path, width1, height1); //读取图片

  //输出到指定文件中
  for (int y = 0; y < image.getHeight(); y += 2) {
    for (int x = 0; x < image.getWidth(); x++) {
      final int pixel = image.getPixel(x, y);
      final int r = (pixel & 0xff0000) >> 16, g = (pixel & 0xff00) >> 8, b = pixel & 0xff;
      final float gray = 0.299f * r + 0.578f * g + 0.114f * b;
      final int index = Math.round(gray * (base.length() + 1) / 255);
      String s = index >= base.length() ? " " : String.valueOf(base.charAt(index));
      text.append(s);
    }
    text.append("\n");
  }
  //return textAsBitmap(text, context);
  //return text;
  return textAsBitmap(text);
}

public static Bitmap scale(String src, int newWidth, int newHeight) {
  Bitmap ret = Bitmap.createScaledBitmap(BitmapFactory.decodeFile(src), newWidth, newHeight, true);
  return ret;
}

public static Bitmap textAsBitmap(StringBuilder text) {

  TextPaint textPaint = new TextPaint();

  // textPaint.setARGB(0x31, 0x31, 0x31, 0);

  textPaint.setColor(Color.BLACK);

  textPaint.setAntiAlias(true);
  textPaint.setTypeface(Typeface.MONOSPACE);

  textPaint.setTextSize(12);
  WindowManager wm = (WindowManager) activity.getSystemService(Context.WINDOW_SERVICE);
  DisplayMetrics dm = new DisplayMetrics();
  wm.getDefaultDisplay().getMetrics(dm);
  int width = dm.widthPixels; //

  StaticLayout layout = new StaticLayout(text, textPaint, width,

  Layout.Alignment.ALIGN_CENTER, 1f, 0.0f, true);

  Bitmap bitmap = Bitmap.createBitmap(layout.getWidth() + 20,

  layout.getHeight() + 20, Bitmap.Config.ARGB_8888);

  Canvas canvas = new Canvas(bitmap);

  canvas.translate(10, 10);

  canvas.drawColor(Color.WHITE);

  // canvas.drawColor(Color.TRANSPARENT, PorterDuff.Mode.CLEAR);//绘制透明色

  layout.draw(canvas);

  //Log.d("textAsBitmap",String.format("1:%d %d", layout.getWidth(), layout.getHeight()));

  return bitmap;

}

【取MP3的内部信息】


//Code By kbz
.iyu
fdir("@ym.mp3",mp3)
call(返回,"mjava","mp3.取各种信息",mp3)
sgsz(返回,0,名字)
sgsz(返回,1,专辑)
sgsz(返回,2,歌手)
sgsz(返回,3,时长)
sgsz(返回,4,图片)
us(3,"text","名字: "+名字)
us(5,"text","专辑: "+专辑)
us(6,"text","歌手: "+歌手)
us(7,"text","时长: "+时长+" (毫秒)")
us(4,"src",图片)


mp3.mjava
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.graphics.Bitmap;
import android.media.MediaMetadataRetriever;

public static Object[] 取各种信息(String 地址) {
  MediaMetadataRetriever mmr=new MediaMetadataRetriever();
  try {
    mmr.setDataSource(activity,Uri.parse(地址));
    Object[] 返回=new Object[5];
    返回[0]=mmr.extractMetadata(MediaMetadataRetriever.METADATA_KEY_TITLE);
    返回[1]=mmr.extractMetadata(MediaMetadataRetriever.METADATA_KEY_ALBUM);
    返回[2]=mmr.extractMetadata(MediaMetadataRetriever.METADATA_KEY_ARTIST);
    返回[3]=mmr.extractMetadata(MediaMetadataRetriever.METADATA_KEY_DURATION);
    返回[4]=取封面(mmr);
    return 返回;
  } catch (Exception e) { 
    syso("错误信息:"+e);
    e.printStackTrace();
    return null; 
  }
}

private Bitmap 取封面(MediaMetadataRetriever mmr)
{
  byte[] picture = mmr.getEmbeddedPicture();
  if(picture==null)
  {
    return null;
  }
  Bitmap bitmap= BitmapFactory.decodeByteArray(picture,0,picture.length);
  return bitmap;
}


【sit打开软件悬浮窗设置】


//跳转到悬浮窗设置页面
sit(a, "action", "android.intent.action.VIEW")
sit(a, "action", "android.settings.action.MANAGE_OVERLAY_PERMISSION")
//包名需自己修改 这里指定的微信
sit(a, "data", "package:com.tencent.mm")
uit(a, "chooser", "设置悬浮窗权限")


【设置工具栏返回键】

//Code By 城府
mian.iyu

s id=3
//toolbar的id

utb(id)
java(mTba, activity, "android.support.v7.app.AppCompatActivity.getSupportActionBar")
java(null, mTba, "android.support.v7.app.ToolbarActionBar.setDisplayHomeAsUpEnabled", "boolean", true)
//设置左边为返回键

utb("set", "leftck", id)
{
  tw("返回")
}


【高斯模糊背景】


.iyu
/.
使用RenderScript进行模糊处理
bitmap 需要模糊的图片
注意:bitmap传入mjava的应为
android.graphics.Bitmap
传入其他类型报错
radius 模糊半径
scale  缩放倍数
back：模糊后的图片
./

s bitmap = "/storage/emulated/0/嗯/1040201432-1e6223a7f96d1f9c.jpg"
s radius = 2
s scale = 10

sbp(bitmap,bitmap)
call(back, "mjava", "photo_blur.scriptBlur", bitmap,radius,scale)
us(1,"background",back)


photo_blur.mjava

import java.net.URI;
import java.io.File;
import android.graphics.drawable.BitmapDrawable;
import android.widget.ImageView;
import android.renderscript.Allocation;
import android.renderscript.Element;
import android.renderscript.ScriptIntrinsicBlur;
import android.renderscript.RenderScript;
import android.graphics.Bitmap;



public Bitmap scriptBlur(Bitmap bitmap, int radius, int scale)
{
  
  //直接复用传入的bitmap，回收还给用户处理
  bitmap = Bitmap.*ScaledBitmap(bitmap, bitmap.getWidth()/scale, bitmap.getHeight()/scale,false);
  
  long startTime = System.currentTimeMillis();
  
  RenderScript rs = RenderScript.*(activity);
  ScriptIntrinsicBlur sb = ScriptIntrinsicBlur.*(rs, Element.U8_4(rs));
  Allocation inp = Allocation.*FromBitmap(rs, bitmap);
  Allocation otp = Allocation.*Typed(rs, inp.getType());
  
  sb.setRadius(radius);
  sb.setInput(inp);
  sb.forEach(otp);
  otp.copyTo(bitmap);

  long endTime = System.currentTimeMillis();
  long useTime = (endTime - startTime);
  //syso("处理用时："+useTime+"ms");
  rs.destroy();
  sb.destroy();
  return bitmap;
}



【数字选择器】


代码来自扛把子QQ178772968

main.iyu

.示例1
fn 选择器.构建()
s 控件1=sss.控件
nvw(控件1,4)
//添加到控件4去
fn 选择器.设置最小值(控件1,0)
fn 选择器.设置最大值(控件1,10)
fn 选择器.设置当前值(控件1,5)
fn 选择器.允许循环滚动(控件1)
fn 选择器.禁止输入(控件1)
s 颜色="#ff2196f5"
fn 选择器.设置分割线颜色(控件1,颜色)
fn 选择器.设置分割线粗细(控件1,13)
fn 选择器.设置文字样式(控件1,"25sp",颜色)
us(控件1,"backgroundcolor","#ffffff")
//设置背景颜色
..................................................................................................................................................................................................................................................
.示例2
fn 选择器.构建()
s 控件2=sss.控件
nvw(控件2,4)
.以下是设置自定义文字的方法
s 内容="噬心iapp手册。QQ。1602961565。你好。111222333。123456"
sl(内容,"。",内容)
fn 选择器.设置内容(控件2,内容)
fn 选择器.禁止输入(控件2)
fn 选择器.禁止循环滚动(控件2)
fn 选择器.隐藏分割线(控件2)
fn 选择器.取当前值(控件2)
syso(sss.值)



创建 选择器.myu

fn 构建()
javanew(sss.控件,"android.widget.NumberPicker","Context",activity)
end fn

fn 设置最小值(控件,最小值)
javax(null,控件,"android.widget.NumberPicker","setMinValue","int",最小值)
end fn

fn 设置最大值(控件,最大值)
javax(null,控件,"android.widget.NumberPicker","setMaxValue","int",最大值)
end fn

fn 设置当前值(控件,当前值)
javax(null,控件,"android.widget.NumberPicker","setValue","int",当前值)
end fn

fn 禁止循环滚动(控件)
javax(null,控件,"android.widget.NumberPicker","setWrap*orWheel","boolean",false)
}
end fn
/.此方法待定
fn 设置分割线间距(控件,)
java(布局参数,控件,"android.view.View.getLayoutParams")
java(null,布局参数,"android.view.ViewGroup$MarginLayoutParams.setMargins","int",0,"int",0,"int",100,"int",0)
java(null,布局参数,"android.view.ViewGroup$MarginLayoutParams.setMarginStart","int",0)
java(null,布局参数,"android.view.ViewGroup$MarginLayoutParams.setMarginEnd","int",100)
end fn
./
fn 允许循环滚动(控件)
javax(null,控件,"android.widget.NumberPicker","setWrap*orWheel","boolean",true)
//一定要设置好最大值才有效果
//最大值必须大于等于3
}
end fn

fn 设置文字样式(控件,大小,颜色)
javags(画笔,控件,"android.widget.NumberPicker","m*orWheelPaint")
//获取画笔
uall(控件,true,控件)
gslist(控件,0,控件)
us(控件,"textcolor",颜色)
us(控件,"textsize",大小)
java(大小,控件,"android.widget.TextView.getTextSize")
java(null,画笔,"android.graphics.Paint.setTextSize","float",大小)
//设置文字大小
f(颜色?"#")
{
java(颜色,null,"android.graphics.Color.parseColor","String",颜色)
}
java(null,画笔,"android.graphics.Paint.setColor","int",颜色)
//设置画笔颜色
javass(null,控件,"android.widget.NumberPicker","m*orWheelPaint",画笔)
java(null,控件,"android.view.View.invalidate")
//刷新控件
end fn

fn 设置内容(控件,内容)
javax(null,控件,"android.widget.NumberPicker","set*edValues","String[]",内容)
//使用此方法，必须设置最大值
sgszl(内容,长度)
s-(1,长度)
fn 选择器.设置最大值(控件,长度)
end fn

fn 取当前值(控件)
uall(控件,true,控件)
gslist(控件,0,控件)
ug(控件,"text",sss.值)
end fn

fn 设置分割线颜色(控件,颜色)
f(颜色?"#")
{
java(颜色,null,"android.graphics.Color.parseColor","String",颜色)
}
javanew(颜色,"android.graphics.drawable.ColorDrawable","int",颜色)
javass(null,控件,"android.widget.NumberPicker","m*ionDivider",颜色)
end fn

fn 禁止输入(控件)
java(null,控件,"android.view.ViewGroup.setDescendantFocusability","int",393216)
end fn

fn 允许输入(控件)
java(null,控件,"android.view.ViewGroup.setDescendantFocusability","int",262144)
end fn

fn 设置分割线粗细(控件,宽度)
javass(null,控件,"android.widget.NumberPicker","m*ionDividerHeight",宽度)
end fn

fn 隐藏分割线(控件)
fn 选择器.设置分割线粗细(控件,0)
end fn



【调用快手打开视频】

s id="你的快手视频链接"
sit(意图,"action","android.intent.action.VIEW")
sit(意图,"data","kwai://work/"+id)
uit(意图,"chooser","快手")
【检查耳机是否插入】

//可以放载入事件
java(音频管理器,activity,"android.content.Context.getSystemService","String","audio")
java(wh,音频管理器,"android.media.AudioManager.isWiredHeadsetOn")
ss("耳机插入状态为："+wh,so)
tw(so)


【调节屏幕亮度】

--请标明"摘自@枭燚的源码"请尊重他人智力劳动成果，谢谢
--此为lua代码
require "import"
import "android.view.*"
local window = activity:getWindow()
local lp = window:getAttributes()
--为0.0-1.0直接的浮点数
lp.screenBrightness = 0.01
window:setAttributes(lp)


【调用应用市场给该软件评分】


 sit(a,"ACTION", "Intent.ACTION_VIEW")
 sit(a,"data","market://details?id=com.iapp.app")
 uit(a, "chooser", "选择操作方式")
 //必须在应用市场有你的软件，否则会提示没有该应用。

【利用Java杀进程】

//枭燚调用java api实例
/.
这是调用了杀死进程的api
第一个java语句是获取本设备的pid
第二个是杀死进程，里面写应用的pid，这里是iapp的所以会自杀
如果要杀别的应用需要
android.permission.KILL_BACKGROUND_PROCESS   自己背下来没毛病_滑稽
这个权限

如果运行后应用闪退或者白屏等为成功了
如果应用打开异常
退了就没问题了
./

//自杀进程
javanew(c,"android.os.Process")
java(id,c,"android.os.Process.myPid")
java(a,c,"android.os.Process.killProcess","int",id)

//杀其它应用进程
//需要权限android.permission.KILL_BACKGROUND_PROCESSES
javags(as,null,"android.content.Context","ACTIVITY_SERVICE")
java(am,activity,"android.app.Activity.getSystemService","String",as)
java(null,am,"android.app.ActivityManager.killBackgroundProcesses","String","com.iapp.app")


【开关WiFi热点】

//开启热点

/.
需要权限
权限管理里打开 访问网络
并在Manifest处添加以下权限
<!-- 更改网络连接性 -->
<uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />
<!-- 连接WLAN网络和断开连接 -->
<uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
<!-- 查看网络连接 -->
<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
<!-- 查看WLAN连接 -->
<uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
如果没有会员，可使用mt反编译添加
./
还需要权限
<!--写入系统设置 -->
<uses-permission android:name="android.permission.WRITE_SETTINGS" />

s ssid = "测试wifi热点"
//这是wifi的名称
s pass = "000000"
//wifi的密码，必须大于等于8位，如果不需要可留空
java(管理器,activity,"android.app.Activity.getSystemService","String","wifi")
//获取wifi管理器
java(null,管理器,"android.net.wifi.WifiManager.setWifiEnabled","boolean",false)
//由于wifi与热点不能同时打开，所以需要关闭wifi
cls("android.net.wifi.WifiConfiguration",热点类)
//获取类
javanew(热点,热点类)
//实例化
javass(is,热点,热点类,"SSID",ssid)
//设置SSID
javass(is,热点,热点类,"preSharedKey",pass)
//设置密码
javags(set,热点,热点类,"allowedKeyManagement")
java(null,set,"java.util.BitSet.set","int",1)
爱编程

//设置加密模式
/.
模式列表
NONE 0
WPA_PSK 1
WPA2_PSK 普通为4，MIUI系统为6
./
java(是否成功,管理器,"android.net.wifi.WifiManager.setWifiApEnabled","android.net.wifi.WifiConfiguration",热点,"boolean",true)
//打开热点
f(是否成功){
  tw("开启成功")
}else{
  tw("开启失败，可能是因为没有权限")
}


///////关闭热点///////////............//.

/.
需要权限
权限管理里打开 访问网络
并在Manifest处添加以下权限
<!-- 更改网络连接性 -->
<uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />
<!-- 连接WLAN网络和断开连接 -->
<uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
<!-- 查看网络连接 -->
<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
<!-- 查看WLAN连接 -->
<uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
如果没有会员，可使用mt反编译添加

还需要权限
<!--写入系统设置 -->
<uses-permission android:name="android.permission.WRITE_SETTINGS" />

./
java(管理器,activity,"android.app.Activity.getSystemService","String","wifi")
//获取wifi管理器
cls("android.net.wifi.WifiConfiguration",热点类)
//获取类
javanew(热点,热点类)
//实例化
java(是否成功,管理器,"android.net.wifi.WifiManager.setWifiApEnabled","android.net.wifi.WifiConfiguration",热点,"boolean",false)
//关闭热点
f(是否成功){
  tw("关闭成功")
}else{
  tw("关闭失败，可能是因为没有权限")
}

【获取视频第一帧】

s path = 视频路径
//文件路径
fdir(path,路径)
//取绝对路径
javanew(视频,"android.media.MediaMetadataRetriever")
//创建实例
java(null,视频,"android.media.MediaMetadataRetriever.setDataSource","String",路径)
//设置路径
java(图像,视频,"android.media.MediaMetadataRetriever.getFrameAtTime")
//获取图片
java(null,视频,"android.media.MediaMetadataRetriever.release")
//释放资源，一定不能漏掉这句，否则超级耗内存

//java(null,null,"java.lang.System.gc")
//如果立刻需要大量内存空间，去掉上面这句代码的“//”即可
us(1,"src",图像)
//设置图像
//这个我测试是可以用的
//原本是lua的，由于调用lua越来越慢，我就改成了这样的

//取自贴吧残页
//哲轩系列软件  至·简iApp手册收录


【sit跳转页面】


//--QQ聊天
ss("mqqwpa://im/chat?chat_type=wpa&uin=1335347584&version=1",urlqq)
sit(a,"action", "android.intent.action.VIEW")
sit(a,"data",urlqq)
uit(a, "chooser", "选择QQ")

//--跳转QQ名片
s qq="2253162533"
//以上为你的QQ号
s url = "mqqapi://card/show_pslcard?src_type=internal&source=sharecard&version=1&uin="
ss(url+qq,url)
sit(a, "action", "android.intent.action.VIEW")
sit(a, "data", url)
uit(a, "chooser", "跳转到加好友")

//--加QQ群
ss("mqqapi://card/show_pslcard?src_type=internal&version=1&uin=740788898&card_type=group&source=qrcode",joinqq)
sit(a,"action", "android.intent.action.VIEW")
sit(a,"data",joinqq)
uit(a, "chooser", "选择QQ")

//--跳转淘宝
s pay="taobao://a.m.taobao.com/i521687360439.htm?price=48.9&sourceType=item&ut_sk=1.WFdF9ZCjiPwDAFr5%2BU37p3wo_12278902_1490125353765.Copy.1&cpp=1&shareurl=true&spm=a313p.22.2nz.29083211945&short_name=h.e9AdvE"
sit(a,"action", "android.intent.action.VIEW")
sit(a,"data",pay)
uit(a, "chooser", "跳转淘宝")

//--QQ公众号
s link="mqqapi://card/show_pslcard?uin=3402562621&account_flag=33626389&card_type=public_account"
sit(a,"action", "android.intent.action.VIEW")
sit(a,"data",link)
uit(a, "chooser", "执行动作的方式")

//--支付宝付款
s pay = "alipays://platformapi/startapp?saId=10000007&clientVersion=3.7.0.0718&qrcode=https%3A%2F%2Fqr.alipay.com%2FFKX05976IIPRH23WX1RJB8%3F_s%3Dweb-other&_t=1495266795585#Intent;scheme=alipays;package=com.eg.android.AlipayGphone;end"
sit(a,"action", "android.intent.action.VIEW")
sit(a,"data",pay)
uit(a, "chooser", "支付宝支付")

//--淘宝搜索
s pay="taobao://s.taobao.com/search?" 
sit(a,"action", "android.intent.action.VIEW") 
sit(a,"data",pay) 
uit(a, "chooser", "跳转淘宝搜索")

//--QQ直接发送图片
sit(a, "action", "android.intent.action.SEND") 
sit(a, "type", "image/jpeg") 
sit(a,"classname","com.tencent.mobileqq", "com.tencent.mobileqq.activity.JumpActivity") 
sit(a, "extra", "android.intent.extra.STREAM","/sdcard/lunbo.png") 
//以上为图片路径。 
uit(a, "chooser", "分享图片") 
//此代码将直接调用QQ发图片，无需选择。

//--跳转酷安个人中心
s pay="coolmarket://u/734022"
sit(a,"action", "android.intent.action.VIEW") 
sit(a,"data",pay) 
uit(a, "chooser", "跳转酷安")

//--跳转支付宝扫一扫
s zfb="alipayqr://platformapi/startapp?saId=10000007"
sit(a,"action", "android.intent.action.VIEW")

sit(a,"data",zfb)
uit(a, "chooser", "支付宝扫一扫")

//微信扫一扫
sit(a,"action", "android.intent.action.VIEW")
sit(a, "classname", "com.tencent.mm", "com.tencent.mm.ui.LauncherUI")
sit(a,"extra","LauncherUI.From.Scaner.Shortcut", true)
sit(a, "flags", "335544320") 
uit(a, "chooser", "微信扫一扫")

//打开淘宝搜索
s pay="taobao://s.taobao.com/search?" 
sit(a,"action", "android.intent.action.VIEW") 
sit(a,"data",pay) 
uit(a, "chooser", "跳转淘宝搜索")

//支付宝充话费
s zfb="alipayqr://platformapi/startapp?saId=10000003"
//跳转支付宝手机充值页面
sit(a,"action", "android.intent.action.VIEW")
sit(a,"data",zfb)
uit(a, "chooser", "支付宝手机充值")


【各类V7弹窗(可变色)】


//Code By Rose
mian.iyu
//--普通消息弹窗:
cls("android.support.v7.app.AlertDialog$Builder", 弹窗类)
javanew(弹窗对象, 弹窗类, "android.content.Context", activity)


cls("android.text.Html", 文本类)
s title="标题"
s color="#E91E63"
ss("<font color=""+color+"">"+title+"</font>",title2)

javax(标题, null, 文本类, "fromHtml", "String", title2)
javax(null, 弹窗对象, 弹窗类, "setTitle", "CharSequence", 标题)
javax(消息, null, 文本类, "fromHtml", "String", "消\n息")
javax(null, 弹窗对象, 弹窗类, "setMessage", "CharSequence", 消息)
javax(null, 弹窗对象, 弹窗类, "setCancelable","boolean","true")
cls("android.content.DialogInterface$OnClickListener", 事件类)
javacb(左边按钮, 事件类)
{
}
javax(null, 弹窗对象, 弹窗类, "setNeutralButton", "CharSequence", "左边按钮", 事件类, 左边按钮)
javacb(中间按钮, 事件类)
{
}
javax(null, 弹窗对象, 弹窗类, "setNegativeButton", "CharSequence", "中间按钮", 事件类, 中间按钮)
javacb(右边按钮, 事件类)
{
}
javax(null, 弹窗对象, 弹窗类, "setPositiveButton", "CharSequence", "右边按钮", 事件类, 右边按钮)
javax(弹窗, 弹窗对象, 弹窗类, "show")

cls("android.support.v7.app.AlertDialog", 弹窗子类)
javax(左边按钮, 弹窗, 弹窗子类, "getButton", "int", -3)
javax(中间按钮, 弹窗, 弹窗子类, "getButton", "int", -2)
javax(右边按钮, 弹窗, 弹窗子类, "getButton", "int", -1)
us(左边按钮, "textcolor", color)
us(中间按钮, "textcolor", color)
us(右边按钮, "textcolor", color)


//--编辑框弹窗:
nvw(null, null, "线性布局", "", linear)
nvw(null, linear,"编辑框","width=-1\nheight=-2\ntext=\nlayout_marginleft=20dp\nlayout_marginright=20dp",textid)


cls("android.view.View",view)
cls("android.graphics.PorterDuff$Mode",pdm)
cls("android.graphics.Color",gc)
cls("android.graphics.PorterDuffColorFilter",pdf)
cls("android.graphics.drawable.Drawable",dr)
cls("android.graphics.ColorFilter",cf)
s ID=textid
us(ID,"textcursordrawable","#E91E63")
javax(bk,ID,view,"getBackground")
javags(sa,null,pdm,"SRC_ATOP")
javax(cl,null,gc,"parseColor","String","#E91E63")
javanew(pd,pdf,"int",cl,pdm,sa)
javax(null,bk,dr,"setColorFilter",cf,pd)



s cls = "android.support.v7.app.AlertDialog$Builder"


cls("android.support.v7.app.AlertDialog$Builder", 弹窗类)
javanew(弹窗对象, 弹窗类, "android.content.Context", activity)

cls("android.text.Html", 文本类)
javax(标题, null, 文本类, "fromHtml", "String", "标题")
javax(null, 弹窗对象, 弹窗类, "setTitle", "CharSequence", 标题)
javax(null, 弹窗对象, 弹窗类, "setView", "android.view.View", linear)


cls("android.content.DialogInterface$OnClickListener", 事件类)
javacb(左边按钮, 事件类)
{
  ug(textid,"text",tw)
  tw(tw)
}
javax(null, 弹窗对象, 弹窗类, "setNeutralButton", "CharSequence", "左边按钮", 事件类, 左边按钮)
javacb(中间按钮, 事件类)
{

}
javax(null, 弹窗对象, 弹窗类, "setNegativeButton", "CharSequence", "中间按钮", 事件类, 中间按钮)
javacb(右边按钮, 事件类)
{

}
javax(null, 弹窗对象, 弹窗类, "setPositiveButton", "CharSequence", "右边按钮", 事件类, 右边按钮)
javax(弹窗, 弹窗对象, 弹窗类, "show")

cls("android.support.v7.app.AlertDialog", 弹窗子类)
javax(左边按钮, 弹窗, 弹窗子类, "getButton", "int", -3)
javax(中间按钮, 弹窗, 弹窗子类, "getButton", "int", -2)
javax(右边按钮, 弹窗, 弹窗子类, "getButton", "int", -1)
us(左边按钮, "textcolor", "#E91E63")
us(中间按钮, "textcolor", "#E91E63")
us(右边按钮, "textcolor", "#E91E63")

//--拖动条弹窗:
nvw(null, null, "线性布局", "width=-1\nheight=-1\norientation=vertical\nlayout_marginleft=20dp\nlayout_marginright=20dp",linear)

nvw(null, linear,"文本","width=-2\nheight=-2\ntext=0\ntextcolor=#000000\ntextsize=16dp\nlayout_margintop=10dp\nlayout_marginleft=30dp",ss.txtid)
nvw(null, linear,"拖动条","width=-1\nheight=-2\nlayout_margin=15dp",preid)


cls("android.widget.ProgressBar",pb)
cls("android.graphics.Color",gc)
cls("android.graphics.PorterDuffColorFilter",pdf)
cls("android.graphics.drawable.Drawable",dr)
cls("android.graphics.ColorFilter",cf)
cls("android.graphics.PorterDuff$Mode",pdm)

s ID=preid
//拖动进度条着色
javax(pdd,ID,pb,"getProgressDrawable")
javags(sa,null,pdm,"SRC_ATOP")
javax(cl,null,gc,"parseColor","String", "#E91E63")
javanew(pd,pdf,"int",cl,pdm,sa)
javax(null,pdd,dr,"setColorFilter",cf,pd)
//滑块着色
javax(tm,ID,"android.widget.AbsSeekBar","getThumb")
javags(sa,null,pdm,"SRC_ATOP")
javax(cl,null,gc,"parseColor","String", "#E91E63")
javanew(pd,pdf,"int",cl,pdm,sa)
javax(null,tm,dr,"setColorFilter",cf,pd)


//不要动这个
ssj(preid, "onprogresschanged2")
{
  us(ss.txtid,"text",st_nS)
}

//文本更新改变时
ssj(ss.txtid,"ontextchanged")
{
  ug(st_vW,"text",number)
  syso(number)
}



cls("android.support.v7.app.AlertDialog$Builder", 弹窗类)
javanew(弹窗对象, 弹窗类, "android.content.Context", activity)


cls("android.text.Html", 文本类)
javax(标题, null, 文本类, "fromHtml", "String", "标题")
javax(null, 弹窗对象, 弹窗类, "setTitle", "CharSequence", 标题)
javax(null, 弹窗对象, 弹窗类, "setView", "android.view.View", linear)


cls("android.content.DialogInterface$OnClickListener", 事件类)
javacb(左边按钮, 事件类)
{
  ug(ss.txrid,"text",num)
  tw(num)
}
javax(null, 弹窗对象, 弹窗类, "setNeutralButton", "CharSequence", "左边按钮", 事件类, 左边按钮)
javacb(中间按钮, 事件类)
{

}
javax(null, 弹窗对象, 弹窗类, "setNegativeButton", "CharSequence", "中间按钮", 事件类, 中间按钮)
javacb(右边按钮, 事件类)
{

}
javax(null, 弹窗对象, 弹窗类, "setPositiveButton", "CharSequence", "右边按钮", 事件类, 右边按钮)
javax(弹窗, 弹窗对象, 弹窗类, "show")

cls("android.support.v7.app.AlertDialog", 弹窗子类)
javax(左边按钮, 弹窗, 弹窗子类, "getButton", "int", -3)
javax(中间按钮, 弹窗, 弹窗子类, "getButton", "int", -2)
javax(右边按钮, 弹窗, 弹窗子类, "getButton", "int", -1)
us(左边按钮, "textcolor", "#E91E63")
us(中间按钮, "textcolor", "#E91E63")
us(右边按钮, "textcolor", "#E91E63")

//--图片弹窗:
nvw(null, null, "线性布局", "width=-1\nheight=-1", linear)
nvw(null, linear,"图像","width=-1\nheight=-2\ntext=\nlayout_marginleft=20dp\nlayout_marginright=20dp",picid)

us(picid,"src","@icon_iapp.png")


cls("android.support.v7.app.AlertDialog$Builder", 弹窗类)
javanew(弹窗对象, 弹窗类, "android.content.Context", activity)


cls("android.text.Html", 文本类)
javax(标题, null, 文本类, "fromHtml", "String", "标题")
javax(null, 弹窗对象, 弹窗类, "setTitle", "CharSequence", 标题)
javax(null, 弹窗对象, 弹窗类, "setView", "android.view.View", linear)


cls("android.content.DialogInterface$OnClickListener", 事件类)
javacb(左边按钮, 事件类)
{

}
javax(null, 弹窗对象, 弹窗类, "setNeutralButton", "CharSequence", "左边按钮", 事件类, 左边按钮)
javacb(中间按钮, 事件类)
{

}
javax(null, 弹窗对象, 弹窗类, "setNegativeButton", "CharSequence", "中间按钮", 事件类, 中间按钮)
javacb(右边按钮, 事件类)
{

}
javax(null, 弹窗对象, 弹窗类, "setPositiveButton", "CharSequence", "右边按钮", 事件类, 右边按钮)
javax(弹窗, 弹窗对象, 弹窗类, "show")

cls("android.support.v7.app.AlertDialog", 弹窗子类)
javax(左边按钮, 弹窗, 弹窗子类, "getButton", "int", -3)
javax(中间按钮, 弹窗, 弹窗子类, "getButton", "int", -2)
javax(右边按钮, 弹窗, 弹窗子类, "getButton", "int", -1)
us(左边按钮, "textcolor", "#E91E63")
us(中间按钮, "textcolor", "#E91E63")
us(右边按钮, "textcolor", "#E91E63")


//--按键弹窗:
nvw(null, null, "线性布局", "orientation=vertical", linear)
nvw(null, linear,"按钮","width=-1\nheight=-2\ntext=www\nbackground=through\npaddingleft=30dp\ngravity=left|center_vertical",b1)
nvw(null, linear,"按钮","width=-1\nheight=-2\ntext=www\nlayout_marginleft=20dp\nlayout_marginright=20dp",b2)
nvw(null, linear,"按钮","width=-1\nheight=-2\ntext=www\nlayout_marginleft=20dp\nlayout_marginright=20dp",b3)


cls("android.support.v7.app.AlertDialog$Builder", 弹窗类)
javanew(弹窗对象, 弹窗类, "android.content.Context", activity)
cls("android.text.Html", 文本类)
javax(标题, null, 文本类, "fromHtml", "String", "标题")
javax(null, 弹窗对象, 弹窗类, "setTitle", "CharSequence", 标题)
javax(null, 弹窗对象, 弹窗类, "setView", "android.view.View", linear)


cls("android.content.DialogInterface$OnClickListener", 事件类)
javacb(左边按钮, 事件类)
{

}
javax(null, 弹窗对象, 弹窗类, "setNeutralButton", "CharSequence", "左边按钮", 事件类, 左边按钮)
javacb(中间按钮, 事件类)
{

}
javax(null, 弹窗对象, 弹窗类, "setNegativeButton", "CharSequence", "中间按钮", 事件类, 中间按钮)
javacb(右边按钮, 事件类)
{

}
javax(null, 弹窗对象, 弹窗类, "setPositiveButton", "CharSequence", "右边按钮", 事件类, 右边按钮)
javax(弹窗, 弹窗对象, 弹窗类, "show")

cls("android.support.v7.app.AlertDialog", 弹窗子类)
javax(左边按钮, 弹窗, 弹窗子类, "getButton", "int", -3)
javax(中间按钮, 弹窗, 弹窗子类, "getButton", "int", -2)
javax(右边按钮, 弹窗, 弹窗子类, "getButton", "int", -1)
us(左边按钮, "textcolor", "#E91E63")
us(中间按钮, "textcolor", "#E91E63")
us(右边按钮, "textcolor", "#E91E63")

ssj(b1, "clicki")
{
  tw("v7弹窗界面")
}

//--进度条弹窗(加载中弹窗):
nvw(null,null, "线性布局", "width=-1\nheight=80dp\ngravity=center_vertical\npadding=20dp",linear)
nvw(o,linear, "进度条", "width=56dp\nheight=56dp\nlayout_marginleft=24dp\nstyle=16842874",viw)
nvw(b,linear, "文本", "layout_marginleft=24dp\nlayout_marginright=24dp\ntextcolor=#7f000000\ntextsize=14sp\nsingleline=true\nellipsize=end",b)
us(b,"text","进度条")


s cls = "android.support.v7.app.AlertDialog$Builder"


cls("android.support.v7.app.AlertDialog$Builder", 弹窗类)
javanew(弹窗对象, 弹窗类, "android.content.Context", activity)

cls("android.text.Html", 文本类)
javax(标题, null, 文本类, "fromHtml", "String", "标题")
javax(null, 弹窗对象, 弹窗类, "setTitle", "CharSequence", 标题)
javax(null, 弹窗对象, 弹窗类, "setView", "android.view.View", linear)


cls("android.content.DialogInterface$OnClickListener", 事件类)
javacb(左边按钮, 事件类)
{

}
javax(null, 弹窗对象, 弹窗类, "setNeutralButton", "CharSequence", "左边按钮", 事件类, 左边按钮)
javacb(中间按钮, 事件类)
{

}
javax(null, 弹窗对象, 弹窗类, "setNegativeButton", "CharSequence", "中间按钮", 事件类, 中间按钮)
javacb(右边按钮, 事件类)
{

}
javax(null, 弹窗对象, 弹窗类, "setPositiveButton", "CharSequence", "右边按钮", 事件类, 右边按钮)
javax(弹窗, 弹窗对象, 弹窗类, "show")

cls("android.support.v7.app.AlertDialog", 弹窗子类)
javax(左边按钮, 弹窗, 弹窗子类, "getButton", "int", -3)
javax(中间按钮, 弹窗, 弹窗子类, "getButton", "int", -2)
javax(右边按钮, 弹窗, 弹窗子类, "getButton", "int", -1)
us(左边按钮, "textcolor", "#E91E63")
us(中间按钮, "textcolor", "#E91E63")
us(右边按钮, "textcolor", "#E91E63")


cls("android.widget.ProgressBar",pb)
cls("android.graphics.Color",gc)
cls("android.graphics.PorterDuffColorFilter",pdf)
cls("android.graphics.drawable.Drawable",dr)
cls("android.graphics.ColorFilter",cf)
cls("android.graphics.PorterDuff$Mode",pdm)

s ID=viw
javax(dic,ID,pb,"getIndeterminateDrawable")
javags(sa,null,pdm,"SRC_ATOP")
javax(cl,null,gc,"parseColor","String","#E91E63")
javanew(pd,pdf,"int",cl,pdm,sa)
javax(null,dic,dr,"setColorFilter",cf,pd)

//--弹窗中添加".iyu"界面:
nvw(null, null, "线性布局", "", linear)
addv(linear, "界面.iyu")


s cls = "android.support.v7.app.AlertDialog$Builder"


cls("android.support.v7.app.AlertDialog$Builder", 弹窗类)
javanew(弹窗对象, 弹窗类, "android.content.Context", activity)


cls("android.text.Html", 文本类)
javax(标题, null, 文本类, "fromHtml", "String", "标题")
javax(null, 弹窗对象, 弹窗类, "setTitle", "CharSequence", 标题)
javax(null, 弹窗对象, cls, "setView", "android.view.View", linear)


cls("android.content.DialogInterface$OnClickListener", 事件类)
javacb(左边按钮, 事件类)
{

}
javax(null, 弹窗对象, 弹窗类, "setNeutralButton", "CharSequence", "左边按钮", 事件类, 左边按钮)
javacb(中间按钮, 事件类)
{

}
javax(null, 弹窗对象, 弹窗类, "setNegativeButton", "CharSequence", "中间按钮", 事件类, 中间按钮)
javacb(右边按钮, 事件类)
{

}
javax(null, 弹窗对象, 弹窗类, "setPositiveButton", "CharSequence", "右边按钮", 事件类, 右边按钮)
javax(弹窗, 弹窗对象, 弹窗类, "show")

cls("android.support.v7.app.AlertDialog", 弹窗子类)
javax(左边按钮, 弹窗, 弹窗子类, "getButton", "int", -3)
javax(中间按钮, 弹窗, 弹窗子类, "getButton", "int", -2)
javax(右边按钮, 弹窗, 弹窗子类, "getButton", "int", -1)
us(左边按钮, "textcolor", "#E91E63")
us(中间按钮, "textcolor", "#E91E63")
us(右边按钮, "textcolor", "#E91E63")


【可变位置高级V7弹窗】

//Code By kbz
mian.iyu
样1:
cls("android.content.DialogInterface$OnClickListener", 事件类)
javacb(事件, 事件类)
{
  s qun=178772968
  ss("mqqapi://card/show_pslcard?src_type=internal&version=1&uin="+qun+"&card_type=group&source=qrcode",joinqq)
  sit(a,"action", "android.intent.action.VIEW")
  sit(a,"data",joinqq)
  uit(a, "chooser", "选择QQ")
}
javacb(事件2, 事件类)
{
  tw("wee")
}
fn 弹窗.构建(null,"AlertDialog","这是一个AlertDialog!",true)
fn 弹窗.设置按钮(sss.弹窗对象,"按钮1","确定",事件)
fn 弹窗.设置按钮(sss.弹窗对象,"按钮2","关闭",事件2)
fn 弹窗.设置按钮(sss.弹窗对象,"按钮3","我只是凑个数",null)
fn 弹窗.显示(sss.弹窗对象)

样2:
cls("android.content.DialogInterface$OnClickListener", 事件类)
javacb(事件, 事件类)
{
  s qun=178772968
  ss("mqqapi://card/show_pslcard?src_type=internal&version=1&uin="+qun+"&card_type=group&source=qrcode",joinqq)
  sit(a,"action", "android.intent.action.VIEW")
  sit(a,"data",joinqq)
  uit(a, "chooser", "选择QQ")
}
fn 弹窗.构建(null,"AlertDialog","界面.iyu",null)
fn 弹窗.设置按钮(sss.弹窗对象,"按钮1","确定",事件)
fn 弹窗.设置按钮(sss.弹窗对象,"按钮2","关闭",null)
fn 弹窗.设置按钮(sss.弹窗对象,"按钮3","我只是凑个数",null)
fn 弹窗.显示(sss.弹窗对象)
gvs(sss.弹窗布局,界面.3,文本)
//gvs用法请看手册
//获取弹窗中的控件3
us(文本,"text","测试OK")
fn 弹窗.设置位置(sss.弹窗对象,"BOTTOM")
zdp(220,高度)
zdp(330,宽度)
fn 弹窗.设置样式(sss.弹窗对象,宽度,高度,50,150)
fn 弹窗.取标题(sss.弹窗对象)
us(sss.标题,"textcolor","#E91E63")
fn 弹窗.取消息(sss.弹窗对象)
us(sss.消息,"textcolor","#E91E63")
fn 弹窗.取按钮(sss.弹窗对象,"BUTTON_POSITIVE")
us(sss.按钮,"textcolor","#E91E63")
fn 弹窗.取按钮(sss.弹窗对象,"BUTTON_NEGATIVE")
us(sss.按钮,"textcolor","#E91E63")
fn 弹窗.取按钮(sss.弹窗对象,"BUTTON_NEUTRAL")
us(sss.按钮,"textcolor","#E91E63")

样3:
cls("android.content.DialogInterface$OnClickListener", 事件类)
javacb(事件, 事件类)
{
  s qun=178772968
  ss("mqqapi://card/show_pslcard?src_type=internal&version=1&uin="+qun+"&card_type=group&source=qrcode",joinqq)
  sit(a,"action", "android.intent.action.VIEW")
  sit(a,"data",joinqq)
  uit(a, "chooser", "选择QQ")
}
javacb(事件2, 事件类)
{
  s qun=178772968
  ss("mqqapi://card/show_pslcard?src_type=internal&version=1&uin="+qun+"&card_type=group&source=qrcode",joinqq)
  sit(a,"action", "android.intent.action.VIEW")
  sit(a,"data",joinqq)
  uit(a, "chooser", "选择QQ")
}
fn 弹窗.构建(null,"AlertDialog","这是一个AlertDialog!",null)
fn 弹窗.设置按钮(sss.弹窗对象,"按钮1","确定",事件)
fn 弹窗.设置按钮(sss.弹窗对象,"按钮2","关闭",事件2)
fn 弹窗.设置按钮(sss.弹窗对象,"按钮3","我只是凑个数",null)
fn 弹窗.显示(sss.弹窗对象)

fn 弹窗.设置位置(sss.弹窗对象,"BOTTOM")
zdp(180,高度)
zdp(300,宽度)
fn 弹窗.设置样式(sss.弹窗对象,宽度,高度,50,150)

fn 弹窗.取标题(sss.弹窗对象)
us(sss.标题,"textcolor","#E91E63")
fn 弹窗.取消息(sss.弹窗对象)
us(sss.消息,"textcolor","#E91E63")
fn 弹窗.取按钮(sss.弹窗对象,"BUTTON_POSITIVE")
us(sss.按钮,"textcolor","#E91E63")
fn 弹窗.取按钮(sss.弹窗对象,"BUTTON_NEGATIVE")
us(sss.按钮,"textcolor","#E91E63")
fn 弹窗.取按钮(sss.弹窗对象,"BUTTON_NEUTRAL")
us(sss.按钮,"textcolor","#E91E63")

样4(动态加控件):
nvw(null, null, "线性布局", "width=-1\nheight=-1", linear)
nvw(null, linear,"编辑框","width=-1\nheight=-1\ntext=？？？？？？\nlayout_marginleft=20dp\nlayout_marginright=20dp",textid)

fn 着色.控件着色(textid,"#35f2b5")


cls("android.content.DialogInterface$OnClickListener", 事件类)
javacb(事件, 事件类)
{
  s qun=178772968
  ss("mqqapi://card/show_pslcard?src_type=internal&version=1&uin="+qun+"&card_type=group&source=qrcode",joinqq)
  sit(a,"action", "android.intent.action.VIEW")
  sit(a,"data",joinqq)
  uit(a, "chooser", "选择QQ")
}
javacb(事件2, 事件类)
{
  ug(textid,"text",a)
  tw(a)
}

fn 弹窗.构建(null,"AlertDialog",linear,null)
fn 弹窗.设置按钮(sss.弹窗对象,"按钮1","确定",事件)
fn 弹窗.设置按钮(sss.弹窗对象,"按钮2","关闭",事件2)
fn 弹窗.设置按钮(sss.弹窗对象,"按钮3","我只是凑个数",null)
fn 弹窗.显示(sss.弹窗对象)
fn 弹窗.取标题(sss.弹窗对象)
us(sss.标题,"textcolor","#E91E63")
fn 弹窗.取消息(sss.弹窗对象)
us(sss.消息,"textcolor","#E91E63")
fn 弹窗.取按钮(sss.弹窗对象,"BUTTON_POSITIVE")
us(sss.按钮,"textcolor","#E91E63")
fn 弹窗.取按钮(sss.弹窗对象,"BUTTON_NEGATIVE")
us(sss.按钮,"textcolor","#E91E63")
fn 弹窗.取按钮(sss.弹窗对象,"BUTTON_NEUTRAL")
us(sss.按钮,"textcolor","#E91E63")


样5(动态加控件并给事件):
cls("android.content.DialogInterface$OnClickListener", 事件类)
javacb(事件, 事件类)
{
  s qun=178772968
  ss("mqqapi://card/show_pslcard?src_type=internal&version=1&uin="+qun+"&card_type=group&source=qrcode",joinqq)
  sit(a,"action", "android.intent.action.VIEW")
  sit(a,"data",joinqq)
  uit(a, "chooser", "选择QQ")
}
javacb(事件2, 事件类)
{
  s qun=178772968
  ss("mqqapi://card/show_pslcard?src_type=internal&version=1&uin="+qun+"&card_type=group&source=qrcode",joinqq)
  sit(a,"action", "android.intent.action.VIEW")
  sit(a,"data",joinqq)
  uit(a, "chooser", "选择QQ")
}
//nvw(null, null, "线性布局", "", linear)
//nvw(null, null,"编辑框","width=-1\nheight=-2\ntext=？？？？？？\nlayout_marginleft=20dp\nlayout_marginright=20dp",textid)

nvw(null, null, "线性布局", "width=-1\nheight=-1\norientation=vertical", linear)
nvw(null, linear,"按钮","width=-1\nheight=-1\ntext=www\nbackground=through\npaddingleft=30dp\ngravity=left|center_vertical",b1)
nvw(null, linear,"按钮","width=-1\nheight=-1\ntext=www\nlayout_marginleft=20dp\nlayout_marginright=20dp",b2)
nvw(null, linear,"按钮","width=-1\nheight=-1\ntext=www\nlayout_marginleft=20dp\nlayout_marginright=20dp",b3)
ssj(b1,"clicki")
{
  fn 弹窗.关闭(sss.弹窗对象)
}

fn 弹窗.构建(null,"AlertDialog",linear,null)
fn 弹窗.设置按钮(sss.弹窗对象,"按钮1","确定",事件)
fn 弹窗.设置按钮(sss.弹窗对象,"按钮2","关闭",事件2)
fn 弹窗.设置按钮(sss.弹窗对象,"按钮3","我只是凑个数",null)
fn 弹窗.显示(sss.弹窗对象)
fn 弹窗.取标题(sss.弹窗对象)
us(sss.标题,"textcolor","#E91E63")
fn 弹窗.取消息(sss.弹窗对象)
us(sss.消息,"textcolor","#E91E63")
fn 弹窗.取按钮(sss.弹窗对象,"BUTTON_POSITIVE")
us(sss.按钮,"textcolor","#E91E63")
fn 弹窗.取按钮(sss.弹窗对象,"BUTTON_NEGATIVE")
us(sss.按钮,"textcolor","#E91E63")
fn 弹窗.取按钮(sss.弹窗对象,"BUTTON_NEUTRAL")
us(sss.按钮,"textcolor","#E91E63")


//--关闭弹窗:
fn 弹窗.关闭(sss.弹窗对象)



//--------------------下方代码放到[弹窗.myu]里面，没有就新建一个，否则上方代码失效---------------------------
/.
传入数据 弹窗图标位置，弹窗标题，弹窗内容，返回键是否可以关闭
注意:弹窗内容可以写界面名！
直接以这个界面做为界面内容
调用此方法后，会生成一个全局变量 弹窗对象
为弹窗的Builder对象
当界面内容为界面名时，还会生成一个全局变量 弹窗布局
为弹窗里的View对象
通过gvs可以获取里面的控件
./
fn 构建(图标,标题,内容,关闭)
syso(内容)
javanew(弹窗对象,"android.app.AlertDialog$Builder", "android.content.Context", activity)
f(图标!=null)
{
  sbp(图标,图标)
  java(null,弹窗对象,"android.app.AlertDialog$Builder.setIcon","android.graphics.drawable.Drawable",图标)
}
f(标题!=null)
{
  java(null,弹窗对象,"android.app.AlertDialog$Builder.setTitle","CharSequence",标题)
}
f(内容*?".iyu"||内容*?"ijs"||内容*?"ijava")
{
  javanew(布局参数,"android.widget.LinearLayout$LayoutParams","int",-1,"int",-1)
  javanew(线性布局,"android.widget.LinearLayout","Context",activity)
  java(null,线性布局,"android.view.View.setLayoutParams","android.view.ViewGroup$LayoutParams",布局参数)
  java(null,线性布局,"android.widget.LinearLayout.setOrientation","int",1)
  addv(线性布局,内容)
  java(null,弹窗对象,"android.app.AlertDialog$Builder.setView","android.view.View",线性布局)
  sss 弹窗布局=线性布局
}
f(内容?"android.widget")
{
  javanew(布局参数,"android.widget.LinearLayout$LayoutParams","int",-1,"int",-1)
  javanew(线性布局,"android.widget.LinearLayout","Context",activity)
  java(null,线性布局,"android.view.View.setLayoutParams","android.view.ViewGroup$LayoutParams",布局参数)
  java(null,线性布局,"android.widget.LinearLayout.setOrientation","int",1)

  //nvw(null, null, "线性布局", "width=-1\nheight=-1", 线性布局)
  //nvw(null, null,"编辑框","width=-1\nheight=-2\ntext=？？？？？？\nlayout_marginleft=20dp\nlayout_marginright=20dp",textid)
  nvw(内容,线性布局)
  java(null,弹窗对象,"android.app.AlertDialog$Builder.setView","android.view.View",线性布局)
  sss 弹窗布局=线性布局
}
else
{
  java(null, 弹窗对象,"android.app.AlertDialog$Builder.setMessage","CharSequence",内容)
}
f(关闭)
{
  java(null, 弹窗对象,"android.app.AlertDialog$Builder.setCancelable", "boolean", false)
}
sss 弹窗对象=弹窗对象
end fn
/.
传入数据 弹窗对象，按钮位置，按钮文字，按钮点击事件
注意，按钮位置按从右到左分别为
按钮1，按钮2，按钮3
按钮的点击事件可以传null
./
fn 设置按钮(弹窗对象,按钮,文字,事件)
cls("android.content.DialogInterface$OnClickListener", 事件类)
f(按钮=="按钮1")
{
  javax(null, 弹窗对象, "android.app.AlertDialog$Builder", "setPositiveButton", "CharSequence",文字, 事件类, 事件)
}
else f(按钮=="按钮2")
{
  javax(null, 弹窗对象, "android.app.AlertDialog$Builder", "setNegativeButton", "CharSequence",文字, 事件类, 事件)
}
else f(按钮=="按钮3")
{
  javax(null, 弹窗对象, "android.app.AlertDialog$Builder", "setNeutralButton", "CharSequence",文字, 事件类, 事件)
}
end fn
/.
传入弹窗对象即可
调用此方法后，会生成一个全局变量
为弹窗的对象
./
/.
.注意！，
.此方法之后的所有方法必须在调用了此方法之后在调用
.否则报错！
./
fn 显示(弹窗对象)
java(弹窗对象,弹窗对象,"android.app.AlertDialog$Builder.create")
java(null,弹窗对象,"android.app.Dialog.show")
sss 弹窗对象=弹窗对象
end fn
//传入弹窗对象即可关闭弹窗
fn 关闭(弹窗对象)
java(null,弹窗对象,"android.app.Dialog.dismiss")
end fn
//传入弹窗对象
//生成一个全局变量 标题
//可以使用us对其进行各种设置
fn 取标题(弹窗对象)
javags(对话框,弹窗对象,"android.app.AlertDialog","mAlert")
javags(sss.标题,对话框,"com.android.internal.app.AlertController","mTitleView")
end fn
//传入弹窗对象
//生成一个全局变量 消息
//可以使用us对其进行各种设置
fn 取消息(弹窗对象)
javags(对话框,弹窗对象,"android.app.AlertDialog","mAlert")
javags(sss.消息,对话框,"com.android.internal.app.AlertController","mMessageView")
end fn
//传入 弹窗对象，标识
//标识数据如下
//左边按钮BUTTON_NEUTRAL
//中间按钮BUTTON_NEGATIVE
//右边按钮BUTTON_POSITIVE
//生成一个全局变量 按钮
//可以使用us对其进行各种设置
fn 取按钮(弹窗对象,标识)
javags(标识,null,"android.content.DialogInterface",标识)
javax(sss.按钮, 弹窗对象,"android.app.AlertDialog","getButton", "int", 标识)
end fn
//传入数据 弹窗对象，弹窗位置
//弹窗位置数据如下
//CENTER中间
//BOTTOM底部
//LEFT左边
//RIGHT右边
//TOP顶部
fn 设置位置(弹窗对象,位置)
java(window,弹窗对象,"android.app.Dialog.getWindow")
javags(位置,null,"android.view.Gravity",位置)
java(null,window,"android.view.Window.setGravity","int",位置)
end fn
//传入 弹窗对象，弹窗的宽度，弹窗的高度，弹窗在x上的偏移量，弹窗在y上的偏移量
//宽度和高度的单位为px
//可以使用zdp把dp转换为px后再传入
fn 设置样式(弹窗对象,宽度,高度,x,y)
java(window,弹窗对象,"android.app.Dialog.getWindow")
cls("android.view.WindowManager$LayoutParams",cls_lp)
java(lp,window,"android.view.Window.getAttributes")
javass(null,lp,"android.view.ViewGroup$LayoutParams","width",宽度)
javass(null,lp,"android.view.ViewGroup$LayoutParams","height",高度)
javass(null,lp,"android.view.WindowManager$LayoutParams","y",y)
javass(null,lp,"android.view.WindowManager$LayoutParams","x",x)
java(null,window,"android.view.Window.setAttributes",cls_lp,lp)
end fn



【获取网络图片】


t()
{
  //参数:图片URL
  call(back,"mjava","Http.getInternetPicture","http://m.baidu.com/static/index/favicon-57.png")
  ufnsui()
  {
    //背景可以设置哦
    us(3,"src",back)
  }
}


//以下代码放Http.mjava



import android.app.*;
import android.content.*;
import android.graphics.*;
import android.net.*;
import java.io.*;
import java.net.*;
import android.graphics.drawable.*;

//获取网络图片
	public static BitmapDrawable getInternetPicture(String UrlPath) {  
        Bitmap bm = null;  
        String urlpath = UrlPath;  
        try {  
            URL uri = new URL(urlpath);  
            HttpURLConnection connection = (HttpURLConnection) uri.openConnection();
            connection.setRequestMethod("GET");  
            connection.setReadTimeout(5000);  
            connection.setConnectTimeout(5000);  
            connection.connect();  
			if (connection.getResponseCode() == 200) {  
                InputStream is = connection.getInputStream();  
                bm = BitmapFactory.decodeStream(is);  
            } else {
                bm = null;  
            }  
        } catch (MalformedURLException e) {  
            e.printStackTrace();  
        } catch (IOException e) {  
            e.printStackTrace();  
        }  
        return new BitmapDrawable(bm);  

    }
    
    
    
【Java判断软件悬浮窗权限】

//Code By xiaoyi
mian.iyu
call(back,"mjava","Window.getAppOps",activity)
tw(back)

window.ijava

import android.app.*;
import android.content.*;
import android.os.*;
import java.lang.reflect.*;
public static boolean getAppOps(Context context) 
{
  try 
  {
    Object object = context.getSystemService("appops");
    if (object == null) 
    {
      return false;
    }
    Class localClass = object.getClass();
    Class[] arrayOfClass = new Class[3];
    arrayOfClass[0] = Integer.TYPE;
    arrayOfClass[1] = Integer.TYPE;
    arrayOfClass[2] = String.class;
    Method method = localClass.getMethod("checkOp", arrayOfClass);
    if (method == null) 
    {
      return false;
    }
    Object[] arrayOfObject1 = new Object[3];
    arrayOfObject1[0] = Integer.valueOf(24);
    arrayOfObject1[1] = Integer.valueOf(Binder.getCallingUid());
    arrayOfObject1[2] = context.getPackageName();
    int m = ((Integer) method.invoke(object, arrayOfObject1)).intValue();
    return m == AppOpsManager.MODE_ALLOWED;
  } catch (Exception ex) 
  {

  }
  return false;
}

【Lua判断悬浮窗权限与打开设置】


//Code By hbzjl
判断:
mian.iyu
call(a, "mlua", "lua.get")
tw(a)
//a为flase则无权限

lua.mlua
function get() 
  import "android.provider.Settings"
  return Settings:canDrawOverlays(activity)
end

打开设置(与上面用sit效果一样):
mian.iyu
call(null, "mlua", "lua.get")


lua.mlua
function get()

  import "android.provider.Settings"
  import "android.content.Intent"
  import "android.net.Uri"


  intent=Intent("android.settings.action.MANAGE_OVERLAY_PERMISSION")
  intent:setData(Uri:parse("package:" .. activity:getPackageName()))
  activity:startActivity(intent)

end

【MD风格toast】

//Code By goudie
mian.iyu
fn md.tw("MD提示！")

md.myu
//mdtw
fn tw(show)
nvw(o,o,"线性布局","",obj)
nvw(o,obj,"线性布局","background=#323232",d)
swh("pxw",w)
us(d,"width",w)
nvw(o,d,"文本","linespacingextra=8\nlayout_margintop=14dp\nlayout_marginright=24dp\nlayout_marginbottom=10dp\nlayout_marginleft=24dp\ntextsize=14sp\ntextcolor=#ffffff",b)
us(b,"text",show)
call(toast,"mlua","lua.Toasts",obj)
end fn

lua.mlua
function Toasts(cv)
  --自定义tw
  import "android.widget.*"
  import "android.view.Gravity"
  to=Toast(activity)
  to:setGravity(Gravity.BOTTOM,0,0);
  to:setView(cv)
  to:show()
end

【Lua获取本软件的版本】

//Code By hbzjl
mian.iyu
call(a, "mlua", "lua.get")
tw(a)
//a为版本号

lua.mlua
function get()
  --版本号
  import "android.content.pm.PackageManager"
  return activity:getPackageManager():getPackageInfo(activity:getPackageName(), 0).versionName
end

【Lua获取视频第一帖】


//Code By hbzjl
mian.iyu
call(a, "mlua", "video.get", "/storage/emulated/0/vvv.mp4")
us(5,"src",a)


video.mlua
function get(path)
  import "android.media.MediaMetadataRetriever"
  media = MediaMetadataRetriever()
  media:setDataSource(tostring(path))
  return media:getFrameAtTime()
end


【mjava获取网络图片】


//Code By xiaoyi
说明:这样弄列表就不需要在列表里加浏览器来加载图片
mian.iyu
t()
{
  //参数:图片URL直链
  s picurl="http://img6.bdstatic.com/img/image/public/20180814.jpg"
  call(back,"mjava","Http.getInternetPicture",picurl)
  ufnsui()
  {
    //背景可以设置哦
    us(1,"background",back)
  }
}

Http.mjava

import android.app.*;
import android.content.*;
import android.graphics.*;
import android.net.*;
import java.io.*;
import java.net.*;
import android.graphics.drawable.*;

//获取网络图片
public static BitmapDrawable getInternetPicture(String UrlPath) { 
  Bitmap bm = null; 
  String urlpath = UrlPath; 
  try { 
    URL uri = new URL(urlpath); 
    HttpURLConnection connection = (HttpURLConnection) uri.openConnection();
    connection.setRequestMethod("GET"); 
    connection.setReadTimeout(5000); 
    connection.setConnectTimeout(5000); 
    connection.connect(); 
    if (connection.getResponseCode() == 200) { 
      InputStream is = connection.getInputStream(); 
      bm = BitmapFactory.decodeStream(is); 
    } else {
      bm = null; 
    } 
  } catch (MalformedURLException e) { 
    e.printStackTrace(); 
  } catch (IOException e) { 
    e.printStackTrace(); 
  } 
  return new BitmapDrawable(bm); 

}


【Java获取壁纸】


cls("android.app.WallpaperManager",class)
javax(wm,null,class,"getInstance","Context",activity)
javax(drawable,wm,class,"getDrawable")
us(5,"src",drawable)
//提示：返回类型为android.graphics.drawable.BitmapDrawable
//你把它当做Drawable也是一样的...
//Writen By Rose


【控件透明度】


//Code By hbzjl
说明:控件包括但不限于图片
mian.iyu
gvs(4,butt)
//4为控件id
call(null, "mlua", "lua.main", 50,butt)
//50就是50%的透明度

lua.mlua
function main(st_nS, image)
  image:setAlpha(st_nS / 100)
end


【Lua改变图片颜色】


mian.iyu
s id="2"
//图标id
s color="#009688"
//颜色
call(null, "mlua", "c.main", id, color)


lua.mlua
function main(id, color)
  --图标着色 
  if type(id)=="number" then
    id=i:gvs(id)
  end
  import "android.graphics.Color"
  local color = Color:parseColor(tos(color))
  id:setColorFilter(color)
end

【Lua判断软件是否安装】


//Code By hbzjl
mian.iyu
call(a, "mlua", "az.get","bin.mt.plus")
//bin.mt.plus是包名

az.mlua
function get(bm)
  --获取某程序是否安装
  if pcall(function() activity:getPackageManager():getPackageInfo(bm,0) end) then
    i:tw("安装了")
  else
    i:tw("没安装")
  end

end

【Lua判断文件夹是否存在】


//Code By hbzjl
说明:判断文件夹，不存在就创建一个
mian.iyu
s path="/storage/emulated/0/zzvvv"
call(if, "mlua", "lua.getif", path)
tw(if)


lua.mlua
--判断文件夹不存在就创建
function getif(path)
  import "java.io.File"
  local f=io.open(path,'r')
  if f~=nil then io.close(f)
    return true 
  else
    File(path):mkdir()
    return false 
  end
end

【设置浏览器手势】


//Code By xiaoyi

gvs(浏览器控件ID,wv)
java(ws,wv,"android.webkit.WebView.getSettings")
//设置WebView是否支持使用屏幕控件或手势进行缩放，默认是true，支持缩放。
java(null,ws,"android.webkit.WebSettings.setSupportZoom","boolean",false)


【网页放大缩小】

//Code By xiaoyi

放大:
gvs(1,ss.wv)
java(c,ss.wv,"android.webkit.WebView.zoomIn")

缩小:
gvs(1,ss.wv)
java(c,ss.wv,"android.webkit.WebView.zoomOut")

【图库刷新】


//Code By kbz
说明:保存了视频或者图片之后打开qq的图库却发现不存在，是因为图库没更新
mian.iyu

call(null,"mjava","photo.更新",路径)


photo.mjava
import android.content.Intent;
import android.net.Uri;
import java.io.File;

public 更新(String 目录)
{
  File file = new File(i.fdir(目录));
  activity.sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse("file://" + file)));
}

【Java获取视频任意一帖】


mian.iyu

fdir("%a.mp4",路径)
javanew(mmr,"android.media.MediaMetadataRetriever")
java(null,mmr,"android.media.MediaMetadataRetriever.setDataSource","String",路径)
java(图片,mmr,"android.media.MediaMetadataRetriever.getFrameAtTime","long",0)
//%a.mp4为视频路径，最后的图片使用us就可以设置到src或者backound，最后的0换第0帧，可改变，但不得超过视频总帧数
//作者残页


【iApp3.0设置toolbar图标颜色】


//Code By 城府
mian.iyu
//iapp3.0会员修改控件默认颜色之后，toolbar上的返回键和菜单键都会被上色！！！简直智障

s id=3
//toolbar的id

utb(id)

gvs(id, mTba)

javags(mMode, null, "android.graphics.PorterDuff$Mode", "SRC_ATOP")

java(颜色,null,"android.graphics.Color.parseColor","String","#ffffff")
//颜色
java(mTbaBackSrc, mTba, "android.support.v7.widget.Toolbar.getNavigationIcon")
java(null, mTbaBackSrc, "android.graphics.drawable.Drawable.setColorFilter", "int", 颜色, "android.graphics.PorterDuff$Mode", mMode)

java(mTbaMenuSrc, mTba, "android.support.v7.widget.Toolbar.getOverflowIcon")
java(null, mTbaMenuSrc, "android.graphics.drawable.Drawable.setColorFilter", "int", 颜色, "android.graphics.PorterDuff$Mode", mMode)

//作者城府

【获取屏幕当前方向】

//Code By kbz
.iyu

java(rs,activity,"Context.getResources")
java(cf,rs,"android.content.res.Resources.getConfiguration")
javags(方向,cf,"android.content.res.Configuration","orientation")
syso("设备当前方向:"+方向)
/.
-1:默认值 由系统来判断显示方向.判定的策略是和设备相关的，所以不同的设备会有不同的显示方向.

0:横屏显示（宽比高要长）

1:竖屏显示(高比宽要长)

2:用户当前首选的方向

3:和该Activity下面的那个Activity的方向一致(在Activity堆栈中的)

4:有物理的感应器来决定。如果用户旋转设备这屏幕会横竖屏切换。

5:忽略物理感应器，这样就不会随着用户旋转设备而更改了（"-1"设置除外）。
./
//作者:幼儿园扛把子


【设置屏幕旋转】


//Code By kbz
.iyu


s ro=0
/.
-1:默认值 由系统来判断显示方向.判定的策略是和设备相关的，所以不同的设备会有不同的显示方向.

0:横屏显示（宽比高要长）

1:竖屏显示(高比宽要长)

2:用户当前首选的方向

3:和该Activity下面的那个Activity的方向一致(在Activity堆栈中的)

4:有物理的感应器来决定。如果用户旋转设备这屏幕会横竖屏切换。

5:忽略物理感应器，这样就不会随着用户旋转设备而更改了（"-1"设置除外）。
QQ178772968
群178772968
最后一个瞎jb乱开源源码
以后源码酌情开源
且行且珍惜！
./
java(null,activity,"android.app.Activity.setRequestedOrientation","int",ro)
//作者:幼儿园扛把子

【Java给图标上色】


//Code By rose
gvs(8,view)

java(c,null,"android.graphics.Color.parseColor","String","#212121")
javags(mode,null,"android.graphics.PorterDuff$Mode","SRC_ATOP")
java(null,view,"android.widget.ImageView.setColorFilter","int",c,"android.graphics.PorterDuff$Mode",mode)


【时间格式转义】


//Code By 城府
time(4,b)
syso(b)
javanew(格式, "java.text.SimpleDateFormat", "String", "yyyy年MM月dd日H时mm分ss秒")
javanew(时间, "java.util.Date", "long", b)
java(时间, 格式, "java.text.DateFormat.format", "java.util.Date", 时间)
syso(时间)


【获取手机剩余电量】


java(管理器,activity,"android.app.Activity.getSystemService","String","batterymanager")
//初始化
java(a,管理器,"android.os.BatteryManager.getIntProperty","int",4)
//获取剩余电量，加上%就是手机剩余的电量
tw(a)


【V7列表的多种用法】


//Code By kbz
.iyu
//竖直列表
gvs(4,对象)
cls("android.support.v7.widget.RecyclerView",列表类)
cls("android.support.v7.widget.LinearLayoutManager",布局管理类)
javanew(布局,布局管理类,"Context",activity,"int",1,"boolean",false)
javax(null,对象,列表类,"setLayoutManager","android.support.v7.widget.RecyclerView$LayoutManager",布局)

//横向列表
gvs(4,对象)
cls("android.support.v7.widget.RecyclerView",列表类)
cls("android.support.v7.widget.LinearLayoutManager",布局管理类)
javanew(布局,布局管理类,"Context",activity,"int",0,"boolean",false)
javax(null,对象,列表类,"setLayoutManager","android.support.v7.widget.RecyclerView$LayoutManager",布局)

//网格列表
gvs(4,对象)
cls("android.support.v7.widget.RecyclerView",列表类)
cls("android.support.v7.widget.GridLayoutManager",布局管理类)
javanew(布局,布局管理类,"Context",activity,"int",3)
javax(null,对象,列表类,"setLayoutManager","android.support.v7.widget.RecyclerView$LayoutManager",布局)

//瀑布流
gvs(4,对象)
cls("android.support.v7.widget.RecyclerView",列表类)
cls("android.support.v7.widget.StaggeredGridLayoutManager",布局管理类)
javanew(布局,布局管理类,"int",2,"int",1)
javax(null,对象,列表类,"setLayoutManager","android.support.v7.widget.RecyclerView$LayoutManager",布局)

【获取控件宽高】



gvs(控件id,控件)

java(宽,控件,"android.view.View.getWidth")
java(高,控件,"android.view.View.getHeight")


【mjava高斯模糊图片】


.iyu
/.
使用RenderScript进行模糊处理
bitmap 需要模糊的图片
注意:bitmap传入mjava的应为
android.graphics.Bitmap
传入其他类型报错
radius 模糊半径
scale 缩放倍数
back：模糊后的图片
转自大不6仙，使用必须在软件内标名！！！
./

s bitmap = "/storage/emulated/0/嗯/1040201432-1e6223a7f96d1f9c.jpg"
s radius = 2
s scale = 10

sbp(bitmap,bitmap)
call(back, "mjava", "photo_blur.scriptBlur", bitmap,radius,scale)
us(1,"background",back)


photo_blur.mjava

import java.net.URI;
import java.io.File;
import android.graphics.drawable.BitmapDrawable;
import android.widget.ImageView;
import android.renderscript.Allocation;
import android.renderscript.Element;
import android.renderscript.ScriptIntrinsicBlur;
import android.renderscript.RenderScript;
import android.graphics.Bitmap;



public Bitmap scriptBlur(Bitmap bitmap, int radius, int scale)
{

  //直接复用传入的bitmap，回收还给用户处理
  bitmap = Bitmap.createScaledBitmap(bitmap, bitmap.getWidth()/scale, bitmap.getHeight()/scale,false);

  long startTime = System.currentTimeMillis();

  RenderScript rs = RenderScript.create(activity);
  ScriptIntrinsicBlur sb = ScriptIntrinsicBlur.create(rs, Element.U8_4(rs));
  Allocation inp = Allocation.createFromBitmap(rs, bitmap);
  Allocation otp = Allocation.createTyped(rs, inp.getType());

  sb.setRadius(radius);
  sb.setInput(inp);
  sb.forEach(otp);
  otp.copyTo(bitmap);

  long endTime = System.currentTimeMillis();
  long useTime = (endTime - startTime);
  //syso("处理用时："+useTime+"ms");
  rs.destroy();
  sb.destroy();
  return bitmap;
}


【手机音量修改】

--基础版，此为lua代码

require "import"
import "android.media.*"
import "android.content.*"

--声音类型，可取为STREAM_VOICE_CALL（通话）、STREAM_SYSTEM（系统声音）、STREAM_RING（铃声）、STREAM_MUSIC（音乐）、STREAM_ALARM（闹铃声）
seek = i:gvs(拖动条id)
am = activity:getSystemService(Context.AUDIO_SERVICE)
local maxVolume = am:getStreamMaxVolume(AudioManager.STREAM_MUSIC)
seek:setMax(maxVolume)
currentv = am:getStreamVolume(AudioManager.STREAM_MUSIC)
seek:setProgress(currentv)
--以上代码放载入事件
--以下代码放拖动条事件
am:setStreamVolume(AudioManager.STREAM_MUSIC,zh,0)
local cv = am:getStreamVolume(AudioManager.STREAM_MUSIC)
seek:setProgress(cv)


//进阶版

//以下代码放在载入事件『


fn AudioManager.init()
//』以上代码放载入事件
//以下代码放在AudioManager.myu『


//重要提示：千万不要改模块名字，否则会报错
//认真看注释，错了别怪作者没写详细
//使用之前一定一定一定要调用init()方法！

//初始化音频管理器，第一次使用前调用它一次，否则会错误
//默认控制媒体音量
fn init()
  javags(sign,null,"android.content.Context","AUDIO_SERVICE")
  java(sss.AudioManager,activity,"android.app.Activity.getSystemService","String",sign)
  fn AudioManager.type(0)
end fn
//重新设置要控制的音量的类型
//0:媒体音量
//1:系统音量
//2：铃声音量
//输入其他等于控制媒体音量
fn type(type)
  cls("android.media.AudioManager",class)
  f(type==0)
  {
    javags(sss.type,null,class,"STREAM_MUSIC")
  }
  else f(type==1)
  {
    javags(sss.type,null,class,"STREAM_SYSTEM")
  }
  else f(type==2)
  {
    javags(sss.type,null,class,"STREAM_RING")
  }
  else
  {
    javags(sss.type,null,class,"STREAM_MUSIC")
  }
end fn
//显示系统当前的xx音量（弹窗音量更改弹窗，但不会增加/减小音量）
fn show()
  cls("android.media.AudioManager",class)
  javags(sign1,null,class,"ADJUST_SAME")
  javags(sign2,null,class,"FLAG_SHOW_UI")
  javax(null,sss.AudioManager,class,"adjustStreamVolume","int",sss.type,"int",sign1,"int",sign2)
end fn
//增加系统当前的xx音量（相当于按一下音量+键）
fn up()
  cls("android.media.AudioManager",class)
  javags(sign1,null,class,"ADJUST_RAISE")
  javags(sign2,null,class,"FLAG_SHOW_UI")
  javax(null,sss.AudioManager,class,"adjustStreamVolume","int",sss.type,"int",sign1,"int",sign2)
end fn
//减小系统当前的xx音量（相当于按一下音量-键）
fn down()
  cls("android.media.AudioManager",class)
  javags(sign1,null,class,"ADJUST_LOWER")
  javags(sign2,null,class,"FLAG_SHOW_UI")
  javax(null,sss.AudioManager,class,"adjustStreamVolume","int",sss.type,"int",sign1,"int",sign2)
end fn
//设置系统当前xx音量(传入数值)
fn set(vol)
  cls("android.media.AudioManager",class)
  javags(sign1,null,class,"FLAG_SHOW_UI")
  javax(null,sss.AudioManager,class,"setStreamVolume","int",sss.type,"int",vol,"int",sign1)
end fn
//获取系统当前xx音量
//结果在变量sss.return里面
fn get()
  cls("android.media.AudioManager",class)
  javax(vol,sss.AudioManager,class,"getStreamVolume","int",sss.type)
  sss return=vol
end fn
//获取系统最大xx音量
//结果在sss.return里面
//强烈建议你们这些直接用set()的人先获取最大音量在好好算算应该传入什么值
//我用set(25)的时候带着耳机特么都吓尿了，声音那么大
fn getMax()
  cls("android.media.AudioManager",class)
  javax(vol,sss.AudioManager,class,"getStreamMaxVolume","int",sss.type)
  sss return=vol
end fn
/.
  关于我：

  作者：Rose
  百度贴吧：@eqfrdryrt
./
  
  
//』以上代码放AudioManager.myu



//『各个功能的调用
//显示音量
fn AudioManager.show()
//增加/减小音量
fn AudioManager.up()
fn AudioManager.down()
//设置音量(15)
fn AudioManager.set(15)
//获取音量
fn AudioManager.get()
tw(sss.return)
//获取最大音量
fn AudioManager.getMax()
tw(sss.return)
//修改控制的音量类型并且增加音量
fn AudioManager.type(1)
fn AudioManager.up()


【编辑框图文混排】


sss a="iApp的图标是[图标]\n[图标1]是返回键图标"

sbp("@icon_iapp.png",图像)
//获取图像
//指定高度与宽度缩放
tsf(图像,180,180,图像)
sbp("@d10f62e8cbe.jpg",yy)
//指定高度与宽度缩放
tsf(yy,80,80,yy)

call(null,"mlua","Super.EditText4Bitmap",sss.a,"\[图标\]",图像)
call(null,"mlua","Super.EditText4Bitmap",sss.a,"\[图标1\]",yy)
call(null,"mlua","Super.a")
//调用super.mlua模块的Bitmap4EditText，1是编辑框id，\[图标\]是匹配替换内容(可以使用正则表达式)，图像是图像变量
//注意：匹配需要遵循正则规则

//以下代码放在 Super.mlua


--[[
@LuaDoc
本模块作用 ：增强编辑框和文本控件
函数1：Bitmap4EditText
函数1作用：编辑框或文本控件实现图文混排
函数1参数：编辑框控件或文本控件id，匹配内容，图片对象
作者：@残页
贴吧ID：szwq26 和 残页技术
改进者：吾乃幼儿园扛把子
注意：如果异常，请使用最新版的iApp
--]]


require "import";

import "android.text.Spannable";
import "android.text.SpannableStringBuilder";
import "android.text.style.ImageSpan";
import "java.util.regex.Pattern";
import "java.util.regex.Matcher";
--以上都是导入一些需要的类
        

function EditText4Bitmap(text,rexgString,myBitmap)

        local builder = SpannableStringBuilder(text);
        --实例化SpannableStringBuilder类
        
        local pattern = Pattern:compile(rexgString);
       
        local matcher = pattern:matcher(text);
        while matcher:find() do

        local imagespan = ImageSpan(myBitmap);
         --实例化ImageSpan类

        local me = i:java(matcher,"java.util.regex.Matcher.end");
        --直接matcher:end()报错，只好用java()（反射）

         builder:setSpan(imagespan,matcher:start(),me,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);

          end
         --循环匹配所有符合条件的字符串
         i:syso(builder);
         i:sss("a",builder)
         end
        
        function a()
        i:gvs(1):setText(sss("a"));
        --设置特效文字到编辑框上，1为编辑框id，可以自行修改，别问我为什么不用i:us()

	end
--作者残页，转载需获得本人同意

【发送邮件】

--此为lua代码，请放在ilua或者mlua界面
import "android.content.Intent"
i = Intent(Intent.ACTION_SEND)
i:setType("message/rfc822") 
i:putExtra(Intent.EXTRA_EMAIL, "邮箱@.com")
i:putExtra(Intent.EXTRA_SUBJECT,"主题")
i:putExtra(Intent.EXTRA_TEXT,"内容")
activity:startActivity(Intent:createChooser(i, "Choice"))

【设置壁纸】

//初始化包
cls("android.app.WallpaperManager",wm)
cls("android.graphics.Bitmap",bitp)
cls("android.graphics.BitmapFactory",bfy)

//图片路径(/sdcard/+路径)
s path = "/sdcard/iApp/Userimg/icon_iapp.png"
//初始化壁纸工具
javax(Wallm,null,wm,"getInstance","Context",activity)
//初始化图片为Bitmap变量
javax(image,null,bfy,"decodeFile","String",path)
//设置壁纸
javax(null,Wallm,wm,"setBitmap",bitp,image)

//需要权限<uses-permission android:name="android.permission.SET_WALL_PAPER"/>应该是这个我手写的或者百度安卓设置壁纸权限

【创建文件夹】


 //初始化file类
  //io流
  javanew(file,"java.io.File","String",filePath)
  //判断是否已存在文件夹
   java(file_exists,file,"java.io.File.exists")
  f(!file_exists)
  {
    java(c,file,"java.io.File.mkdirs")
    f(!c)
    {
      //递归函数 若未成功则一直创建知道成功
      fn java.makeDir(filePath)
      //失败
    }
    //创建
  }
 
 //创建文件夹
/.
需要java标准的合法路径
iapp的路径标准不可用

iapp内有权限无需手动添加(允许访问外置内存什么什么那几个)
filePath == 文件夹路径

file = new File(filePath);
			if (!file.exists()) {
				file.mkdir();
			}
			
			
			
			
			//重命名文件夹
/.
 需添加权限
	<uses-permission android:name='android.permission.WRITE_EXTERNAL_STORAGE'></uses-permission>
	<uses-permission android:name='android.permission.MOUNT_UNMOUNT_FILESYSTEMS'/>./
fn renameDir(dirPath,newDirPath)
//初始化io流
javanew(dirPath_io,"java.io.File",,"String",dirPath)
javanew(newDirPath_io,"java.io.File","String",newDirPath)

//判断是否有冲突
java(newDirExists,newDirPath_io,"java.io.File.exists")
f(!newDirExists)
{
  java(c,dirPath_io,"java.io.File.renameTo","File",newDirPath_io)
  //无冲突
}


【选择浏览器打开链接】

sit(a,"ACTION", "android.intent.action.VIEW") 
sit(a,"data","http://baidu.com") 
//以上为需要调用浏览器访问的网站 
uit(a, "chooser", "选择浏览器") 

如果需要在t线程中使用此代码需要加上线程更新，如下： 
t() 
{ 

ufnsui() 
{ 
sit(a,"ACTION", "android.intent.action.VIEW") 
sit(a,"data","http://baidu.com") 
//以上为需要调用浏览器访问的网站 
uit(a, "chooser", "选择浏览器") 
} 

} 

说明：调用浏览器打开网页（支持自带浏览器，支持所有浏览器），比hws好用多了。 

【隐藏浏览器放大缩小按钮】

//复制以下代码到浏览器界面 
//8为浏览器id 

us(8,"url",sss.weblink) 
gvs(8,wv) 
java(ws,wv,"android.webkit.WebView.getSettings") 
java(null,ws,"android.webkit.WebSettings.setBuiltInZoomControls","boolean",true) 
java(null,ws,"android.webkit.WebSettings.setDisplayZoomControls","boolean",false) 

说明：无法隐藏hw放大按钮，只能隐藏自己创建的浏览器界面的浏览器！ 

【控件圆角的设置1】

ngde(360,"-1",a)
us(7,"background",a)
//360就是圆角的弧度 数字越大弧度越大 数字越小弧度越小
//7是按钮的id 请修改成你的按钮id

【控件圆角的设置2】

//0为外围圆圈宽度
//20是圆角度数
ngde(0,20,"#fcfcfcfc",0,e)
us(id,"background",e)
/.！
光子逆天转裁
./

【安卓圆形进度条】

说明:新建一个iApp的长条进度条，在布局代码加上下方代码

默认长条圆进度条:
style=16842872

小形长条进度条:
style=16842875

小号圆进度条:
style=16842873

中号圆进度条:
style=16842871

大号圆进度条:
style=16842874

评分星星进度条:
style=16842876

评分小号星星进度条:
style=16842877
【控件阴影】

gvs(2, 标题栏)
//2为控件
zdp(4, 标题栏阴影)
//4为阴影厚度
java(null,标题栏,"android.view.View.setElevation", "float",标题栏阴影)
【点击发送QQ临时会话】

s qq=2279499274
//你的QQ号
ss("mqqwpa://im/chat?chat_type=wpa&uin="+qq+"&version=1",urlqq)

sit(a,"action", "android.intent.action.VIEW")
sit(a,"data",urlqq)
uit(a, "chooser", "选择QQ")


【点击加入QQ群】

s qun=333797002
//群号
ss("mqqapi://card/show_pslcard?src_type=internal&version=1&uin="+qun+"&card_type=group&source=qrcode",joinqq)

sit(a,"action", "android.intent.action.VIEW")
sit(a,"data",joinqq)
uit(a, "chooser", "选择QQ")

【图片开关例子】
f(ss.kz==null)
.获取点击次
{
us(4,"src","@op.png")
.先是关闭样式的图片 4是图像控件ld 下面的4也一样
ss kz=1
tw("你关闭了按钮")
.第一次点击时事件
}
else
{
tw("你打开了按钮")
.第二次点击时事件
us(4,"src","@ok.png")
.关闭样式的图片
.这个4注意改成你的图像控件id哦
ss kz=null
}
.by丶搁浅
.QQ 2958353845

【控件移出屏幕】

swh("w",w)
//获取屏幕宽
zdp(w,w)
//转换为dp值
dhas(dh, 2, "translationX", 0,w)
//2为控件id
dh(dh, "duration", 800)
//800为动画时间
dh(dh, "start")

【判断手机系统】

说明：19为系统SDK，SDK对应的系统版本如下：

sjxx(xt)
sgsz(xt,2,xtb)
sj(xtb,"\n",null,xtb)
sj(xtb,"\n",null,sdk)
f(sdk==19)
{
tw("检测到你的系统版本为4.4")
}


//sdk对照表，更多可自行百度

. Android4.0            14
. Android4.0.3         15
. Android4.1             16
. Android4.2.2          17
. Android4. 4             19
. Android4.4WA(L)   20
. Android5.1.1           21

. Android6.0              22

【lua改变图片颜色】

mian.iyu
s id="2"
//图标id
s color="#009688"
//颜色
call(null, "mlua", "c.main", id, color)


lua.mlua
function main(id, color)
  --图标着色 
  if type(id)=="number" then
    id=i:gvs(id)
  end
  import "android.graphics.Color"
  local color = Color:parseColor(tos(color))
  id:setColorFilter(color)
end

【浏览器控件圆角】

ss("<html><img style="border-radius:25px;width:100%;height:500px;" src="这里写图片链接"></html>",url)
.看中文提示↑

s d = "utf-8"
s e = "text/html"
   
us(1,"url",url,d,e,kk)
.1是浏览器控件↑

【去除浏览器滚动条】

gvs(浏览器id,wv)
java(ws,wv,"android.webkit.WebView.getSettings")
java(null,ws,"android.webkit.WebSettings.setBuiltInZoomControls","boolean",false)
java(null,ws,"android.webkit.WebSettings.setDisplayZoomControls","boolean",false)

【列表定位到指定位置】

//列表定位到底部
us(列表id,"selection","bottom")
//列表定位到顶部
us(列表id,"selection","top")
//列表定位到第6个数据
us(列表id,"selection",6)

【分享指定次数】

t()
{
sss zx="true"
//配初始变量
 ufnsui()
 {
 s share="欢迎使用至·简iApp手册，获取更多精彩软件：https://pan.baidu.com/s/1gatbFRlkhyft-zGpBVkbOw 密码: d48h"
 //分享内容
 sit(a, "action", "android.intent.action.SEND")
 sit(a, "type", "text/plain")
 sit(a,"classname","com.tencent.mobileqq", "com.tencent.mobileqq.activity.JumpActivity")
 sit(a, "extra", "android.intent.extra.TEXT",share)
 uit(a, "chooser", "分享")
 //直接调用QQ分享
 }
}
t()
{
  stop(4000)
  //分享4秒后判断分享成功，配置分享成功的变量（可自行根据具体情况进行微调）
  sss zx=null
}

//以下代码放在Restar重新开始事件
fr("%zhexuan/至·简手册/分享.txt",zt)
f(zt==null)
{
 s zt="0"
}
syso(zt)
s sharenum=3
//设置分享次数
f(zt>=sharenum)
{
 tw("分享成功")
 //分享成功执行操作可以配合跳转代码
 uigo("至简手册.iyu")
}
f(sss.zx=="true")
{
 tw("取消分享是无效的哦！o(´^｀)o")
 //变量是初始变量判定为未分享成功
}
else
{
  //变量不是初始变量，判定分享成功
  s(zt+1,zt)
  ss("分享成功，已分享"+zt,ztw)
  tw(ztw)
  fw("%zhexuan/至·简手册/分享.txt",zt)
}

【获取壁纸】

s id=图片控件
cls("android.app.WallpaperManager",class)
javax(wm,null,class,"getInstance","Context",activity)
javax(drawable,wm,class,"getDrawable")
us(id,"src",drawable)
//取自rose，二次修改至·简iApp手册

【下载后导入iApp源码】

.把以下代码输入到列表的单击触屏项目中ulag(st_vW,st_pN,软件链接文本ID,a)

ulag(st_vW,st_pN,软件名字文本ID,z)

ss("%至·简手册/"+z+".iapp",m)

sss z=z

sss m=m

t()
{

 ufnsui()
 {

  utw("","","jz.iyu",false,sss.utw)

  
{

}

}

 ufnsui()
 {

  gvs(sss.utw,2,c)
  }

 dhr(dh,0,360,1,0.5,1,0.5)

 dh(dh,"duration",2000)

 ufnsui()
 {

  us(c,"dh",dh)
  }

 dh(dh, "repeat", 1000)

 hd(a,m,true,kk)

 fe(m,ll)

 f(ll==true)
 {

  ufnsui()

  
{
endutw()

   ufnsui()
   
{

    utw("","","dr.iyu",false,jjj)

    
{

}

   
}

  
}

}

else
{

  ufnsui()
{

   tw("下载失败")
  
}

}


}
.把以下代码输入到导入按钮中

ss("%iApp/ProjectApp/"+sss.z+"/dh",h)

ss("%iApp/ProjectApp/"+sss.z,b)t()
{
fw(h,"yes")

 fd(h,kk)

 fuzs(sss.m,b,m)

 syso(b)

 ufnsui()
 {

  tw("导入成功")

  endutw()
  }

}

【列表写法】

ula(a, 10="@1.png",5="你好",6="个人签名",-1="1",8=null)

ula(a, 10="@1.png",5="你好",6="个人签名",-1="1",8=null)

ula(a, 10="@1.png",5="你好",6="个人签名",-1="1",8=null)

ula(a, 10="@1.png",5="你好",6="个人签名",-1="1",8=null)

uls(1,a,"a.iyu",-1,-2)
注：以上根据具体情况放在事件里

ulag(st_vW, -1, h)
注：以上放按钮点击事件

【二维码生成】

.......将以下代码放到按钮控件的点击事件中
s bi=3
.这个是编辑框ID，用于输入内容
s ti=2
.这个是图像控件ID，用于显示二维码
us(ti,"height","125dp")
us(ti,"width","125dp")
ug(bi,"text",ug)
f(ug!="")
{

 us(ti,"visibility","0")
 uqr(ug,400,ss.uqr)
 us(ti,"src",ss.uqr)
 .生成二维码
 tw("点击二维码可保存")
}

else
{

 tw("请不要留空")
 us(ti,"visibility","8")
}
.......将以下代码放到二维码图像的点击事件中
f(ss.uqr==null)
{

 tw("亲，你还没有生成二维码哦~")
}

else
{

 time(4,tm)
 ss("yingzi"+tm+".png",jg)
 ss("图像已保存至根目录！\n\n名称："+jg,utw)
 bfs(ss.uqr,jg)
 utw("","保存成功",utw,"知道了",false,v)
 {

}

}

【控件透明度】

说明:控件包括但不限于图片
mian.iyu
gvs(4,butt)
//4为控件id
call(null, "mlua", "lua.main", 50,butt)
//50就是50%的透明度

lua.mlua
function main(st_nS, image)
  image:setAlpha(st_nS / 100)
end

【java获取壁纸】

cls("android.app.WallpaperManager",class)
javax(wm,null,class,"getInstance","Context",activity)
javax(drawable,wm,class,"getDrawable")
us(5,"src",drawable)
//提示：返回类型为android.graphics.drawable.BitmapDrawable
//你把它当做Drawable也是一样的...
//Writen By Rose

【进度条.实例】

//圆形
us(id, "style", 16842871)

//长条
java(null, v, "android.widget.ProgressBar.setIndeterminate", "boolean", true)

//长条 底层第二个初始值
java(null, v, "android.widget.ProgressBar.setSecondaryProgress", "int", 10)

【打印】

print("打印"..233)

【变量】

local a = "变量"..233
print(a)

local b = [[多行
233]]

print(b)

【开关事件.实例】

--开关
local switch = i:javanew("android.widget.Switch", {"Context", activity})
i:nvw(switch, 父控件)

i:ssj(switch, "clicki", {
function()
  local cd = i:ug(switch, "checked")
  if cd == true then
    --开启  
    
  elseif cd == false then
  --关闭
  
  end
end
})

【按钮阴影.实例】

--就在手册里自己拆包
local dex = i:loadjar("control")

--获取dex中的 android.widget.CardView 类
local cls = i:cls(dex, "android.widget.CardView")

--创建
local cv = i:javanew(cls, {"Context", activity})
i:nvw(cv, 父控件)

i:us(cv, "width", "72dp")
i:us(cv, "height", "36dp")

local backColor = i:ngde(3, "#009688")
i:us(cv, "background", backColor)

i:nvw(233, cv, "文本", "text=BUTTON\ntextsize=14dp\ntextcolor=#FFFFFF\ngravity=center\nwidth=-1\nheight=-1")
i:us(233, "backgroundripple", "#18000000")

--阴影高度
cv:setCardElevation(12)

【下拉刷新.实例】

//mian.iyu
cls("android.support.v4.widget.SwipeRefreshLayout", cls)

.创建
javanew(srl, cls, "android.content.Context", activity)
nvw(srl, 父控件)
nvw(233, srl, "列表", "width=-1\nheight=-1")

.颜色
call(color_list, "mlua", "lua.setColor", "#009688")
javax(null, srl, cls, "setColorSchemeColors", "int[]", color_list)

.距离
call(null, "mlua", "lua.setDistance", srl, 50)

.事件
java(listener, srl, "android.support.v4.widget.SwipeRefreshLayout.setOnRefreshListener", ".android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener", null)
{
  .刷新后滚动状态，可以写判断
  javax(null, srl, cls, "setRefreshing", "boolean", false)
}


--lua.mlua
function setColor(color)
  import "android.graphics.*"
  color = Color:parseColor(tos(color))
  list = i:nsz(1, "int")
  i:sssz(list, 0, toi(color))
  return list
end

function setDistance(srl, number)
  srl:setDistanceToTriggerSync(number);
end

【悬浮提示.实例】

//方法
s text = "自定义Toast" 
s textSize = "14dp"
s textColor = "#009688" 
s textStyle = "normal" 
s typeFace = "normal" 
s backFillet = 4 
s backColor = "#EEEEEE"
s backShadow = 4 
s timeStop = 1200 

//参数：文字，文字大小，文字颜色，文字字形，文字风格，背景圆角，背景颜色，阴影高度，停滞时间
fn Toast.makeText(text, textSize, textColor, textStyle, typeFace, backFillet, backColor, backShadow, timeStop)


//模块
fn makeText(text, textSize, textColor, textStyle, typeFace, backFillet, backColor, backShadow, timeStop)
  //自适
  swh("pxh", h)
  swh("pxw", w)
  s2(w/100, w)
  s(h-h/w, h)

  //悬浮窗
  s x = 0
  s y = h
  s w = -2
  s h = -2
  s type = 2006 
  s gravity = "top"
  s flags = 400
  s format = 0
  uxf("Toast.iyu", x, y, w, h, type, gravity, flags, format, sss.uxf)
  
  //获取对象
  gvs(sss.uxf, Toast.1, lv) 
  gvs(sss.uxf, Toast.2, cv) 
  gvs(sss.uxf, Toast.3, tv) 
  
  //隐藏布局
  us(cv, "visibility", "gone")
  
  //线性属性
  java(null, cv, "android.view.View.setElevation", "float", backShadow) 
  s(backShadow*2, px)
  ss(px+"dp", dp)
  us(cv, "layout_marginleft", dp)
  us(cv, "layout_marginright", dp)
  us(cv, "layout_margintop", dp)
  us(cv, "layout_marginbottom", dp)
  
  ngde(backFillet, backColor, back)
  us(cv, "background", back)
  
  //文本属性
  us(tv, "text", text)
  us(tv, "textsize", textSize)
  us(tv, "textcolor", textColor)
  us(tv, "textstyle", textStyle)
  us(tv, "typeface", typeFace) 
  
  t()
  {   
   
    //显示动画
    ufnsui()
    {
      us(cv, "visibility", "visible")
      dha(alpha, false, true)
      dh(alpha, "duration", timeStop)
      us(cv, "dh", alpha)
    }  
    stop(timeStop)   
     
    //隐藏动画
    ufnsui()
    { 
      dha(alpha, true, false)
      dh(alpha, "duration", timeStop)
      us(cv, "dh", alpha)     
       
      //动画结束
      dhon(alpha)
      {
        us(cv, "visibility", "gone")
        uxf(sss.uxf, "del")
      }    
    }  
  }  
end fn


//布局
线性布局，线性布局，文本(内边距8dp)

.灵感来自我的朋友，贴吧@asdLOL258 解决了无法覆盖状态栏布局的问题(部分设备可能无法显示)

【列表至底.实例】

//方法
ssj(id, "onscrollstatechanged")
{
  f(st_sE == 0)
  {
    gvs(id, v)
    call(null, "mlua", "index$lua.onScrollStateChanged", l, s, v)
  }
}


--模块
function onScrollStateChanged(l, s, v)
  if v:getLastVisiblePosition()==v:getCount()-1 then
    --事件
  end
end

【iApp防VPN抓包】

//首先新建一个vpn.myu模块，放入以下代码，然后再在其他页面的载入事件里调用，调用代码代码fn vpn.vpn()
代码如下 ↓↓     ↓↓      ↓↓

fn vpn()
s isVpn = false
java(nis,null,"java.net.NetworkInterface.getNetworkInterfaces")
f(nis != null){
  java(list,null,"java.util.Collections.list","java.util.Enumeration",nis)
  for(ni;list){
    java(up,ni,"java.net.NetworkInterface.isUp")
    java(ia,ni,"java.net.NetworkInterface.getInterfaceAddresses")
    java(size,ia,"java.util.List.size")
    f(up && size != 0){
      java(name,ni,"java.net.NetworkInterface.getName")
      f(name == "tun0" || name == "ppp0"){
        s isVpn = true
        break
        }
      }
    }
  }
f(isVpn==true)
{
  syso("有抓包")
  tw("网络错误")
  end()
  endcode
}
else
{
  syso("没有抓包")
}
end fn

//来自葫芦侠 残阳

【lua获取视频第一帧】

mian.iyu
call(a, "mlua", "video.get", "/storage/emulated/0/vvv.mp4")
us(5,"src",a)


video.mlua
function get(path)
  import "android.media.MediaMetadataRetriever"
  media = MediaMetadataRetriever()
  media:setDataSource(tostring(path))
  return media:getFrameAtTime()
end

【java控件着色】

说明:放在.iyu的载入事件下，id需要对应好
例如如果把修改编辑框的代码弄到修改单选项上，会异常并失败
//Code By Scave
mian.iyu
//--按钮着色:
s id="需修改的控件id"
cls("android.view.View",view)
cls("android.graphics.PorterDuff$Mode",pdm)
cls("android.graphics.Color",gc)
cls("android.graphics.PorterDuffColorFilter",pdf)
cls("android.graphics.drawable.Drawable",dr)
cls("android.graphics.ColorFilter",cf)

gvs(id,ID)
javax(bk,ID,view,"getBackground")
javags(sa,null,pdm,"SRC_ATOP")
javax(cl,null,gc,"parseColor","String","#35f2b5")
javanew(pd,pdf,"int",cl,pdm,sa)
javax(null,bk,dr,"setColorFilter",cf,pd)

//--编辑框着色:
s id="需修改的控件id"
cls("android.view.View",view)
cls("android.graphics.PorterDuff$Mode",pdm)
cls("android.graphics.Color",gc)
cls("android.graphics.PorterDuffColorFilter",pdf)
cls("android.graphics.drawable.Drawable",dr)
cls("android.graphics.ColorFilter",cf)

us(id,"textcursordrawable","#35f2b5")
gvs(id,ID)
javax(bk,ID,view,"getBackground")
javags(sa,null,pdm,"SRC_ATOP")
javax(cl,null,gc,"parseColor","String","#35f2b5")
javanew(pd,pdf,"int",cl,pdm,sa)
javax(null,bk,dr,"setColorFilter",cf,pd)

//--长形进度条着色:
s id="需修改的控件id"
cls("android.widget.ProgressBar",pb)
cls("android.graphics.Color",gc)
cls("android.graphics.PorterDuffColorFilter",pdf)
cls("android.graphics.drawable.Drawable",dr)
cls("android.graphics.ColorFilter",cf)
cls("android.graphics.PorterDuff$Mode",pdm)

gvs(id,ID)
javax(pdd,ID,pb,"getProgressDrawable")
javags(sa,null,pdm,"SRC_ATOP")
javax(cl,null,gc,"parseColor","String","#35f2b5")
javanew(pd,pdf,"int",cl,pdm,sa)
javax(null,pdd,dr,"setColorFilter",cf,pd)

//--圆形进度条着色:
s id="需修改的控件id"
cls("android.widget.ProgressBar",pb)
cls("android.graphics.Color",gc)
cls("android.graphics.PorterDuffColorFilter",pdf)
cls("android.graphics.drawable.Drawable",dr)
cls("android.graphics.ColorFilter",cf)
cls("android.graphics.PorterDuff$Mode",pdm)

gvs(id,ID)
javax(dic,ID,pb,"getIndeterminateDrawable")
javags(sa,null,pdm,"SRC_ATOP")
javax(cl,null,gc,"parseColor","String","#35f2b5")
javanew(pd,pdf,"int",cl,pdm,sa)
javax(null,dic,dr,"setColorFilter",cf,pd)


//--拖动条着色:
s id="需修改的控件id"
cls("android.widget.ProgressBar",pb)
cls("android.graphics.Color",gc)
cls("android.graphics.PorterDuffColorFilter",pdf)
cls("android.graphics.drawable.Drawable",dr)
cls("android.graphics.ColorFilter",cf)
cls("android.graphics.PorterDuff$Mode",pdm)

gvs(id,ID)
//拖动进度条着色
javax(pdd,ID,pb,"getProgressDrawable")
javags(sa,null,pdm,"SRC_ATOP")
javax(cl,null,gc,"parseColor","String","#35f2b5")
javanew(pd,pdf,"int",cl,pdm,sa)
javax(null,pdd,dr,"setColorFilter",cf,pd)
//滑块着色
javax(tm,ID,"android.widget.AbsSeekBar","getThumb")
javags(sa,null,pdm,"SRC_ATOP")
javax(cl,null,gc,"parseColor","String","#35f2b5")
javanew(pd,pdf,"int",cl,pdm,sa)
javax(null,tm,dr,"setColorFilter",cf,pd)


//--单选项着色:
s id="需修改的控件id"
cls("android.widget.CompoundButton",cb)
cls("android.graphics.PorterDuff$Mode",pdm)
cls("android.graphics.Color",gc)
cls("android.graphics.PorterDuffColorFilter",pdf)
cls("android.graphics.drawable.Drawable",dr)
cls("android.graphics.ColorFilter",cf)

gvs(id,ID)
javax(bk,ID,cb,"getButtonDrawable")
javags(sa,null,pdm,"SRC_ATOP")
javax(cl,null,gc,"parseColor","String","#35f2b5")
javanew(pd,pdf,"int",cl,pdm,sa)
javax(null,bk,dr,"setColorFilter",cf,pd)

//--多选项着色:
s id="需修改的控件id"
cls("android.widget.CompoundButton",cb)
cls("android.graphics.PorterDuff$Mode",pdm)
cls("android.graphics.Color",gc)
cls("android.graphics.PorterDuffColorFilter",pdf)
cls("android.graphics.drawable.Drawable",dr)
cls("android.graphics.ColorFilter",cf)

gvs(id,ID)
javax(bk,ID,cb,"getButtonDrawable")
javags(sa,null,pdm,"SRC_ATOP")
javax(cl,null,gc,"parseColor","String","#35f2b5")
javanew(pd,pdf,"int",cl,pdm,sa)
javax(null,bk,dr,"setColorFilter",cf,pd)

//--开关着色:
s id="需修改的控件id"
cls("android.widget.Switch",cb)
cls("android.graphics.PorterDuff$Mode",pdm)
cls("android.graphics.Color",gc)
cls("android.graphics.PorterDuffColorFilter",pdf)
cls("android.graphics.drawable.Drawable",dr)
cls("android.graphics.ColorFilter",cf)

javax(td,ID,cb,"getThumbDrawable")
javax(tk,ID,cb,"getTrackDrawable")
javags(sa,null,pdm,"SRC_ATOP")
javax(cl,null,gc,"parseColor","String","#35f2b5")
javanew(pd,pdf,"int",cl,pdm,sa)
javax(null,td,dr,"setColorFilter",cf,pd)
javax(null,tk,dr,"setColorFilter",cf,pd)


【java控件着色(高级版)】

说明:首先这个代码开源自残页QQ1582270018，我仅修复开关着色问题
代码分两部分，一个是模块，一个是调用模块直接修改控件颜色
此代码的优点在于，绝大多部分iApp控件都支持变色，并调用的代码不变(模块会自动分析你的控件是单选还是多选或者是编辑框)

//--调用:
mian.iyu
fn 着色.控件着色(id,"#35f2b5")
//id为控件代码，后面是颜色

//--模块(不要改模块名字，不要修改模块内容):
着色.myu
/.
作者残页，QQ1582270018
这东西Scave和Rose都写过了，只不过要么在我手机上报错要么一堆bug，所以自己弄了一个
只应该调用控件着色这个方法，里面把所有事情都做好了
注释里写了内部函数的函数，请不要随便调用
兼容可能没弄好，如果在哪部手机上运行会报错请反馈给我
（反正我2.3.6都没报错，只是不好看而已）

关于有些调用了系统的实现的，一些是自己的实现在高版本上不能用，一些是为了防止出现一些奇怪的bug

ps：为了兼容我下载了Api22，Api19，Api15的源码啃
./

fn 控件着色(控件,颜色)
java(类,控件,"java.lang.Object.getClass")
java(类名,类,"java.lang.Class.getName")
f(类名 == "java.lang.Integer"){
  gvs(控件,控件)
  java(类,控件,"java.lang.Object.getClass")
  java(类名,类,"java.lang.Class.getName")
}
f(颜色 ? "#"){
  s 小颜色=颜色
  java(颜色,null,"android.graphics.Color.parseColor","String",颜色)
}
f(类名 == "android.widget.EditText"){
  fn 着色.编辑框着色(控件,颜色)
}else f(类名 == "android.widget.CheckBox" || 类名 == "android.widget.RadioButton" || ){
  fn 着色.单选多选着色(控件,颜色)
}else f(类名 == "android.widget.ProgressBar" || 类名 == "android.widget.RatingBar"){
  //RatingBar间接继承自ProgressBar，貌似这样也可以，就偷懒了

  fn 着色.进度条着色(控件,颜色)
}else f(类名 == "android.support.v7.widget.SwitchCompat"){
  fn 着色.开关着色(控件,小颜色)
}else f(类名 == "android.widget.SeekBar"){
  fn 着色.拖动条着色(控件,颜色)
}else f(类名 == "android.widget.ImageView"){
  fn 着色.图片控件着色(控件,颜色)
}else f(类名 == "android.widget.ScrollView"){
  fn 着色.滚动控件边缘着色(控件,颜色)
}else f(类名 == "android.widget.ListView"){
  fn 着色.列表控件边缘着色(控件,颜色)
}else f(类名 == "android.widget.HorizontalScrollView"){
  fn 着色.水平滚动边缘着色(控件,颜色)
}else f(类名 == "android.support.v4.view.ViewPager"){
  fn 着色.滑动窗体边缘着色(控件,颜色)
}else{
  fn 着色.背景着色(控件,颜色)
}
end fn

fn 编辑框着色(控件,颜色)
fn 着色.背景着色(控件,颜色)
javags(SDK_INT,null,"android.os.Build$VERSION","SDK_INT")
f(SDK_INT > 12){
  //安卓版本大于3.1才支持光标着色
  javags(dres,控件,"android.widget.TextView","mCursorDrawableRes")
  f(dres > 0){
    java(res,activity,"android.content.Context.getResources")
    java(drawable,res,"android.content.res.Resources.getDrawable","int",dres)
    fn 着色.Drawable着色(drawable,颜色)
    javags(editor,控件,"android.widget.TextView","mEditor")
    javags(drawables,editor,"android.widget.Editor","mCursorDrawable")
    sssz(drawables,0,sss.drawable)
    sssz(drawables,1,sss.drawable)

    //还有个问题，那个选择水滴的颜色不能改…… 
  }
}
end fn

fn 单选多选着色(控件,颜色)
javags(SDK_INT,null,"android.os.Build$VERSION","SDK_INT")
f(SDK_INT >= 21){
  //5.0以上直接调用系统的设置颜色
  java(csl,null,"android.content.res.ColorStateList.valueOf","int",颜色)
  java(null,控件,"android.widget.CompoundButton.setButtonTintList","android.content.res.ColorStateList",csl)
}else{
  //5.0以下自己实现（其实5.0以上系统自己的实现也是这样）
  javags(drawable,控件,"android.widget.CompoundButton","mButtonDrawable")
  fn 着色.Drawable着色(drawable,颜色)
}
end fn

fn 进度条着色(控件,颜色)
java(是否不精确,控件,"android.widget.ProgressBar.isIndeterminate")
f(是否不精确){
  java(drawable,控件,"android.widget.ProgressBar.getIndeterminateDrawable")
  fn 着色.Drawable着色(drawable,颜色)
}else{
  java(drawable,控件,"android.widget.ProgressBar.getProgressDrawable")
  fn 着色.Drawable着色(drawable,颜色)
}
end fn

fn 拖动条着色(控件,颜色)
fn 着色.进度条着色(控件,颜色)
//SeekBar继承自ProgressBar，可以直接这样对进度值着色
//让我偷个懒吧……

java(drawable,控件,"android.widget.AbsSeekBar.getThumb")
fn 着色.Drawable着色(drawable,颜色)
end fn

fn 开关着色(控件,颜色)

syso(颜色)


slg(颜色, ifs)

f(ifs=="7")
{
  ssg(颜色,1,ys)
  ss("#50"+ys,xolor)
}
else f(ifs=="9")
{
  ssg(颜色,3,ys)
  ss("#50"+ys,xolor)
}
s view=控件
ug(view,"checked",if0)
cls("android.support.v7.widget.SwitchCompat",switch_c)
f(if0)
{
  javax(d,view,switch_c,"getThumbDrawable")
  cls("android.graphics.drawable.Drawable",d_c)
  java(color,null,"android.graphics.Color.parseColor","String",颜色)
  javax(d2,d,d_c,"setTint","int",color)
  javax(d,view,switch_c,"getTrackDrawable")
  java(color,null,"android.graphics.Color.parseColor","String",xolor)
  javax(d2,d,d_c,"setTint","int",color)
}
java(null, view, "android.widget.CompoundButton.setOnCheckedChangeListener", ".android.widget.CompoundButton$OnCheckedChangeListener", null)
{
  slg(颜色, ifs)

  f(ifs=="7")
  {
    ssg(颜色,1,ys)
    ss("#50"+ys,xolor)
  }
else f(ifs=="9")
  {
    ssg(颜色,3,ys)
    ss("#50"+ys,xolor)
  }

  sgsz(st_aS,0,mview)
  ug(mview,"checked",if)
  cls("android.support.v7.widget.SwitchCompat",switch_c)
  f(if)
  {
    javax(d,mview,switch_c,"getThumbDrawable")
    cls("android.graphics.drawable.Drawable",d_c)
    java(color,null,"android.graphics.Color.parseColor","String",颜色)
    javax(d2,d,d_c,"setTint","int",color)
    javax(d,mview,switch_c,"getTrackDrawable")
    java(color,null,"android.graphics.Color.parseColor","String",xolor)
    javax(d2,d,d_c,"setTint","int",color)
  }
else
  {
    javax(d,mview,switch_c,"getThumbDrawable")
    cls("android.graphics.drawable.Drawable",d_c)
    java(color,null,"android.graphics.Color.parseColor","String","#ececec")
    javax(d2,d,d_c,"setTint","int",color)
    javax(d,mview,switch_c,"getTrackDrawable")
    java(color,null,"android.graphics.Color.parseColor","String","#9e9e9e")
    javax(d2,d,d_c,"setTint","int",color)
  }
}
end fn

fn 图片控件着色(控件,颜色)
java(null,控件,"android.widget.ImageView.setColorFilter","int",颜色)
end fn

fn 滚动控件边缘着色(控件,颜色)
javags(顶部边缘,控件,"android.widget.ScrollView","mEdgeGlowTop")
fn 着色.EdgeEffect着色(顶部边缘,颜色)
javags(底部边缘,控件,"android.widget.ScrollView","mEdgeGlowBottom")
fn 着色.EdgeEffect着色(底部边缘,颜色)
end fn

fn 列表控件边缘着色(控件,颜色)
javags(顶部边缘,控件,"android.widget.AbsListView","mEdgeGlowTop")
fn 着色.EdgeEffect着色(顶部边缘,颜色)
javags(底部边缘,控件,"android.widget.AbsListView","mEdgeGlowBottom")
fn 着色.EdgeEffect着色(底部边缘,颜色)
end fn

fn 水平滚动边缘着色(控件,颜色)
javags(左边缘,控件,"android.widget.HorizontalScrollView","mEdgeGlowLeft")
fn 着色.EdgeEffect着色(左边缘,颜色)
javags(右边缘,控件,"android.widget.HorizontalScrollView","mEdgeGlowRight")
fn 着色.EdgeEffect着色(右边缘,颜色)
end fn

fn 滑动窗体边缘着色(控件,颜色)
javags(左边缘,控件,"android.support.v4.view.ViewPager","mLeftEdge")
fn 着色.EdgeEffectCompat着色(左边缘,颜色)
javags(右边缘,控件,"android.support.v4.view.ViewPager","mRightEdge")
fn 着色.EdgeEffectCompat着色(右边缘,颜色)
end fn

fn 背景着色(控件,颜色)
java(背景,控件,"android.view.View.getBackground")
fn 着色.Drawable着色(背景,颜色)
end fn

fn Drawable着色(drawable,颜色)

//内部函数，请不要随意调用
f(drawable != null){
  javags(atop,null,"android.graphics.PorterDuff$Mode","SRC_ATOP")
  javanew(pdcf,"android.graphics.PorterDuffColorFilter","int",颜色,"android.graphics.PorterDuff$Mode",atop)
  java(null,drawable,"android.graphics.drawable.Drawable.setColorFilter","android.graphics.ColorFilter",pdcf)
  sss drawable = drawable
}
end fn

fn EdgeEffect着色(edge,颜色)
//内部函数，请不要随意调用
f(edge != null){
  javags(SDK_INT,null,"android.os.Build$VERSION","SDK_INT")
  f(SDK_INT >= 21){
    //Api21及以上，绘制方法变化，调用系统的方法进行着色
    java(null,edge,"android.widget.EdgeEffect.setColor","int",颜色)
  }else{
    //Api21以下，自己实现
    javags(drawable,edge,"android.widget.EdgeEffect","mEdge")
    fn 着色.Drawable着色(drawable,颜色)
    javags(drawable,edge,"android.widget.EdgeEffect","mGlow")
    fn 着色.Drawable着色(drawable,颜色)
  }
}
end fn

fn EdgeEffectCompat着色(edgeCompat,颜色)
//内部函数，请不要随意调用
f(edgeCompat != null){
  javags(edge,edgeCompat,"android.support.v4.widget.EdgeEffectCompat","mEdgeEffect")
  fn 着色.EdgeEffect着色(edge,颜色)
}
end fn

//禁止修改任何代码，不然会报错！！

【控件加阴影】
控件加阴影

gvs(1,a) 

java(null,a, "android.view.View.setElevation", "float",5) 
//5为阴影高度 

【调用支付宝充值】
s zfb="alipayqr://platformapi/startapp?saId=10000003"
//跳转支付宝手机充值页面
sit(a,"action", "android.intent.action.VIEW")
sit(a,"data",zfb)
uit(a, "chooser", "支付宝手机充值")

说明：需要已安装支付宝才能起效，此代码可以跳转到支付宝话费充值界面。

【调用支付宝扫一扫】
s zfb="alipayqr://platformapi/startapp?saId=10000007"
sit(a,"action", "android.intent.action.VIEW")

sit(a,"data",zfb)
uit(a, "chooser", "支付宝扫一扫")

说明：需要以安装支付宝才能起效。

【调用支付宝支付】

s url="HTTPS://QR.ALIPAY.COM/FKX0326118CZPOZQQRXH4D"
//以上链接改为你的支付宝二维码链接

s pay="alipayqr://platformapi/startapp?saId=10000007&clientVersion=3.7.0.0718&qrcode="
ss(pay+url,pay)
sit(a,"action", "android.intent.action.VIEW")
sit(a,"data",pay)
uit(a, "chooser", "支付宝捐款")

说明：需要已安装支付宝，此代码将打开支付宝指定转账界面。

【跳转QQ名片界面】


//添加作者QQ 
ss("mqqapi://card/show_pslcard?src_type=internal&source=sharecard&version=1&uin=1837140348",urlcard) 
sit(a,"action", "android.intent.action.VIEW") 
sit(a,"data",urlcard) 
uit(a, "chooser", "QQ名片") 

【获取网页源码】
s a="网址"
s b=编辑框id
t()
{
hs(a,null,null,ym)
stop(1500)
us(b,"text",ym)
}

//网页源码获取

【模板的使用方法】
模块的使用说明：模块的作用只是为了节约你的写代码时间，其实和载入事件没什么区别。

比如新建一个模块：m.myu
在模块里写以下代码：

fn ok(sb)
tw("我是模块")
end fn

在其他界面的载入事件调用：
代码如下：

fn m.ok(sb)

界面打开后就会执行m.myu模块里 fn ok(sb) 以内的事件。
当然你也可以在这个模块里加不同的调用代码，比如：

fn ok(sb)
tw("我是模块")
end fn

fn yes(no)
tw("我是模块")
end fn

通过fn m.yes(no)调用模块fn yes(no)部分的代码！

【编辑框光标颜色修改】
textcursordrawable=#03A9F4

.在编辑框属性内加入上面的代码即可，颜色自己修改

【隐藏下拉刷新的圈圈】
us(1, "refreshing", false)
.1是下拉刷新控件id↑

【下拉刷新时的颜色修改】
colorschemecolors=#ffff0600|#ff005fff|#ffceff00

.在下拉刷新控件属性内输入以上代码即可实现刷新时的颜色修改，这里是三种颜色

【下拉刷新的使用】

t()
{
  stop(1600)
  ufnsui()
  {
    us(2, "refreshing", false)
    tws(null, "刷新成功", 0)
  }
}

【无限旋转图片】
dhr(dh, 0, 720, 1, 0.5, 1, 0.5)
dh(dh, "duration", 3000)
us(图片id, "dh", dh)
dhon(dh)
{
us(图片id, "dh", dh)
}

【窗口无限震动特效】

s fu=这是振动的幅度，建议在10-50之间
swh("h",h)
s(h-fu,hs)
swh("w",w)
s(w-fu,ws)
t()
{
//这是振动的间隔
s jg=100
w(1==1)
{
us(0,"x",fu)
us(0,"w",w)
stop(jg)
us(0,"y",fu)
us(0,"x",0)
stop(jg)
us(0,"y",0)
us(0,"h",hs)
stop(jg)
us(0,"w",ws)
us(0,"h",h)
stop(jg)
}
}

【判断软件是否正版】

s bb="你的包名"
s bb="com.jay.iapp"
//这里用我的手册为例子
t()
{
uapplist(true, b)
s c=0
t()
{
for(a;b)
{
f(a?bb)
{
s(c+1,c)
}
}
f(c==0)
{
tw("请勿使用盗版软件！")
end()
}
else
{
tw("欢迎使用正版软件！")
}
}
}


【获取QQ头像】

s id=6
s id1=5
t()
{
ug(id,"text",qq)
s tx=".QQ头像.png"
s bb="&"
//想加得出下载地址
ss("http://q4.qlogo.cn/g?b=qq"+bb+"nk="+qq+bb+"s=100",wz)
hd(wz,tx,tp)
f(tp==0)
{
ss("%"+tx,txx)
//相加得出本地目录地址
ufnsui()
{
us(5, "src", txx)
}
}
else
{
tw("获取失败！")
}
}




【获取手机信息】

//列表控件id
s lb=2
//获取手机信息
sjxx(a)
//循环
for(c;a)
{
ula("t",c;c,m)
uls(lb,"t",m,n)
}

说明：可显示手机的信息在指定列表


【免费飞信发送信息】

t()
{
s hao="13800138000"
//上面写你飞信账号

s mi="123456"
//写你飞信密码

s you="1008611"
//写你要发的飞信好友账号

s sms="你要发的信息"
//写你发的内容

s fu="&"
ss("http://faduanxin.sinaapp.com/?phone="+hao+fu+"pwd="+mi+fu+"to="+you+fu+"msg="+sms,url)
hs(url,null,null,so)

}


【身份证信息查询】


s id=这里是身份证号输入框id
s id1=这里是显示文本id

t()
{
ug(id,"text",hao)

ss("http://wap.ip138.com/id_search.asp?userid="+hao,h)

hs(h,null,null,hh)

sj(hh,"<div class="a">","</div>",hs)

sr(hs,"<br/>","n",hs)

sutf8to(hs,hs)

us(id1,"text",hs)
}

【汉字转拼音】

s id=这里是汉字输入框id
s id1=这里是显示文本id

ug(id,"text",zhnr)
s hsapi="http://2.itxtech.sinaapp.com/pinyin.php?hs="
f(zhnr!="")
{
stobm(zhnr,"utf-8",zhnr)
ss(hsapi+zhnr,hsget)
t()
{
hs(hsget,null,null,hsba)
f(hsba!="null")
{
us(id1,"text",hsba)
}
else
{
tw("网络不给力啊！")
}
}
}
else
{
tw("请输入需要转换的汉字！")
}

【错觉加密算法】

======加密=======

t()
{
s id1=输入内容的控件id
s id2=输出内容的控件id
s id3=移动位数的控件id

ug(id1,"text",a)
slg(a,o)
ug(id3,"text",b)
f(b<=o)
{
ssg(a,0,b,c)
ss("teshujiangefu"+a,a)
ss("teshujiangefu"+c,c1)
sr(a,c1,"",d)
ss(d+c,e)
.stobm(e, "utf-8", e)
us(id2,"text",e)
}
else
{
tw("不能超过输入字符长度")
}
}

______________________


======解密=======


t()
{
s id1=这里是输入内容的控件id
s id2=这里是输出内容的控件id
s id3=这里是移动位数的控件id

ug(id1,"text",a)
slg(a,o)
ug(id3,"text",b)
f(b<=o)
{
s(o-b,b1)
ssg(a,b1,o,c)
ss(c+a,e)
ss(e+"teshujiangefu",e)
ss(c+"teshujiangefu",c1)
sr(e,c1,"",d)
.sutf8to(d, d)
us(id2,"text",d)
}
else
{
tw("不能超过输入字符长度")
}
}

___________________


如需使用utf-8编码请将stobm和sutf8to前面的“.”点去掉


【远程控制状态栏推送消息（可做广告）】
  
  t()
  {
  s url="此处输入远程后台的网址"
  hs(url,null,null,nrzz)
  f(nrzz=="")
  {
  tw("不弹出状态栏消息")
  }
  else
  {
  s ks1 = "jstx="
  s js1 = "1"
  sj(nrzz, ks1, js1, jstx)
  s ks2 = "bt="
  s js2 = "2"
  sj(nrzz, ks2, js2, bt)
  s ks3 = "txnr="
  s js3= "3"
  sj(nrzz, ks3, js3, txnr)
  s ks4 = "dzurl="
  s js4= "4"
  sj(nrzz, ks4, js4, dzurl)
  ss("http://"+dzurl,dzurl)
  t()
  {
  ftz(jstx,bt,txnr,dzurl)
  }
  }
  }
  
.网站后台这样写

  
  jstx=此处填写即时消息提醒1
  bt=此处填写状态栏推送消息的标题2
  txnr=此处填写提醒的详情3
  dzurl=此处填写点击状态栏提示的消息后访问的地址4

//不懂可以去详细讲解查看详细解说

【文本保存、读取、查找】


保存:
1、
fw("abc.txt","这里是内容")

2、
s a="这里是内容"
fw("abc.txt",a)

3、
s a="iapp/abc.txt"
s b="这里是内容"
fw(a,b)

.iapp为文件夹，abc.txt为文件

________________


读取:
1、
fr("abc.txt",a)
tw(a)

2、
s a="iapp/abc.txt"
fr(a,b)
us(id,"text",b)

.iapp为文件夹，abc.txt为文件，id为控件id须修改

________________


查找:

s a="这里是要找的内容，我们来找这里有几个”找”字"
s b="找"

s c=0
s d=0
s e=0
slg(a,g)
t()
{
w(e==0)
{
siof(a,b,c,f)
f(f==-1)
{
s e=1
ss("查找完成，共"+d+"个",h)
tw(h)
}
else
{
s(f+1,f)
ssg(a,f,g,a)
slg(a,g)
s(d+1,d)
}
}
}

________________

.注：.a是要查找内容，b是要找的字，如果要查找的内容是读出文本那就加一个读出涵数，然后把上面s a="xxx"那句删除掉，如：

s a="这里是要找的内容，我们来找这里有几个”找”字"

改成:

fr("abc.txt",a)

【时间解锁】
s id=
.这里填写编辑框的id
time("H",a)
.获取小时数
time("M",b)
.获取分钟数
ss(a+b,c)
.将小时与分钟连接起来，组成四位数，作为密码
ug(id,"text",d)
.获取编辑框里的数字
f(d==c)
{
tw("密码正确",0)
}
.如果编辑框里的数字等于密码，就提示密码正确
else f(d=="")
{
tw("你还没有输入密码！",0)
}
.编辑框没有内容就提示还没输入密码
else
{
tw("密码错误",0)
}
.以上两种情况都不满足，就提示密码错误
.此代码适用于iapp2.0
.此代码建议放到一个按钮的单击触屏事件

【倒计时】
s id=这里是本文控件id
t()
{
ss("正在倒计时60秒",b)
ufnsui()
{
us(id,"text",b)
}
s a=60
for(1;60)
{
f(a==1)
{
.这里还可以加其代码
ufnsui()
{
us(id,"text","倒计时完成")
}
endcode
}
s(a-1,a)
ss("正在倒计时"+a+"秒",c)
ufnsui()
{
us(id,"text",c)
}
stop(1000)
}
}

【控件错乱讲解】
很多人2.0不知道怎么让控件不错乱，今天我就来教大家如何让控件不错乱！
比如:
添加了个按钮控件，控件属性
width=-2
height=-2
text=按钮

或者这样
width=-2
height=40
text=按钮

像这样的属性导致控件错乱可能性80%，那么我们该如何改属性呢？
首先按钮高度尽量不要设置为-2，还有设置控件高度为50...其他什么数字的时候(-1,-2不包括)，后面一定要加单位dp，如果不加单位一般控件都会错乱！(-1,-2不要加dp)
下面来个查考:
width=-2
(宽度尽量设置-1,或者-2)
height=50dp
text=按钮


像这样做，一般情况控件不会错乱！
还有呢，建议大家不要移动控件，一般移动控件很容易让控件错乱的！
还有要好好利用布局，只要会使用布局控件，根本不用移动控件！
教程来自forest讲解！
重要事情再说一遍:后面一定加dp
【注册机】


//注册机，可以利用来赚钱
//首先我们必须要有一个后台来管理
//可以去我的磨或者forest社区
//发帖内容如下:

激活用户☆这里写imei号，用符号,隔开☆激活用户
//发帖好了，把网址复制到下面的s wz=""的""符号里面！

//然后把这段代码放入载入
//--------------------
s id=编辑框或者文本id
simei(imei)
us(id,"text",imei)

//---------------------



//然后把下面这段判断代码放入激活按钮

s wz="网址"
t()
{
hs(wz,aa)
sj(aa,"激活用户☆","☆激活用户",cc)
simei(zh)
f(cc?zh)
{
ufnsui()
{
tw("已注册！")
}
.还可以添加其他代码，例如uigo
}
else
{
ufnsui()
{
tw("未注册，请联系作者注册！")
}
}
}
【分享图片】
sit(a, "action", "android.intent.action.SEND")

sit(a, "type", "*/*")

sit(a, "extra", "android.intent.extra.STREAM","/sdcard/iApp/Userimg/icon_iapp.png")

.这是图片路径
uit(a, "chooser", "分享") 

//作者:forest

【本文转语音】
ug(id,"text",a)

//输入编辑框id
f(a=="")
{
tw("请输入文字")
}
else
{
stobm(a,"utf-8",a)
sr(a," ","",a)
t()
{
ss("http://tts.baidu.com/text2audio?ie=UTF-8&lan=zh&text="+a,a)
ufnsui()
{
tw("下载中...",0)
}
hd(a,"%iappsj/转语音/转换后.mp3",true,b)
f(b==0)
{
ufnsui()
{
tw("已保存到根目录的%iappsj/转换后目录里面",0)
}
bfm("%iappsj/转语音/转换后.mp3",c)
bfms(c,"st")
}
}
}
//新手册

【进度条参考】
s jd="progress"
//这是进度的参数
s id=
//这里是进度条ID
t()
{
us(id,jd,1)
s a=1
s b=100
w(100>0)
{
ug(id,jd,pp)
s+(pp,1,ppk)
f(pp==99)
{
uigo("a1.iyu")

//跳转界面
end()
}
us(id,jd,ppk)
stop(20)

}
}

【图片按钮比例相同】

很多朋友打包自己软件发给别人，然后别人因为手机不同而是图标比例相差太大！

今天我来教大家一个小秘诀！
就是如何让不同分辨率的手机，图标不会比例相差过大！

其实很简单的！
只要添加一个线性布局，然后设置控件适合的宽度和高度，接着再使用 background=添加图标即可！

【随机验证码】
s a=2
//这里是显示验证码文本的id
t()
{
sran(111111,99999,yz)
ufnsui()
{
us(a,"text",yz)
}
}


//以上代码放入载入界面事件
//下面这个代码放入按钮点击事件
s yzm=2
//显示验证码的文本id
s bjk=3
//输入验证码的编辑框
ug(yzm,"text",nr)
ug(bjk,"text",nrnr)
f(nr==nrnr)
{
ufnsui()
{
tw("验证码正确！")
}
}
else
{
ufnsui()
{
tw("验证码错误！")
}
sran(111111,99999,yz)
ufnsui()
{
us(yzm,"text",yz)
}
}

【载入百分比启动界面】

s a=0
//jg这是你的间隔
s jg=30
t()
{
//循环100次
for(1;101)
{
ss("正在启动程序"+a+"%",b)
ufnsui()
{
us(id控件, "text", b)
}
s(a+1,a)
stop(jg)
f(a=="100")
{
uigo("跳转界面名称")
end()
}
}
}


//forest-群号:438802386


【软件背景图】
直接在第一个线性布局的控件属性里输入background图片即可
例：
width=-1
height=-1
orientation=vertical
background=@bj.jpg

【清空输入框】
s id=这里填输入框或输出框ID

ug(id,"text",a)
f(a=="")
{
ufnsui()
{
tw("数据己清除！")
}
}
else
{
ufnsui()
{
us(id,"text","")
}
}
//用来清空输入框里面的内容

【分享代码实例】
sit(a, "action", "android.intent.action.SEND")
sit(a, "type", "text/plain")
sit(a, "extra", "android.intent.extra.SUBJECT", "分享软件")
sit(a, "extra", "android.intent.extra.TEXT", "芯iApp手册给你一个全新的生活，下载链接:加群即可下载，群号:438802386")
sit(a, "flags", 268435456)
uit(a, "chooser", "分享")

【使用密码进入软件】

s id=4
//id是编辑框id，也就是密码输入框id
ug(id,"text",mm)
s zq="这里是密码内容"
f(mm==zq)
{
ufnsui()
{
tw("密码正确")
//这里还可以添加其他代码
}
}
else
{
ufnsui()
{
tw("密码错误")
//这里还可以添加其他代码
}
}


//作者:forest

【判断是否拥有网络】
t()
{
s gh="http://wodemo.net"
//网址可以更换一些快一点的，如果不懂那么就不要更换了
hs(gh,jg)
f(jg==null)
{
ufnsui()
{
tw("没有网络")
//这里还可以添加其他代码
}
}
else
{
ufnsui()
{
tw("网络可用")
//这里还可以添加其他代码
}
}
}

【防止打开软件启动键盘】
在编辑框的父控件属性里添加：
focusable=true
focusableintouchmode=true
即可

【简单公告（可以显示图片）】
//很多新手都不会弄公告
//现在我给大家分享一个最简单做公告方式
//首先去我的收藏添加一个收藏，接着转发收藏、然后点击转发的收藏、然后点击右上角的按钮、接着选择复制链接！
//然后返回添加一个浏览器控件
//设置浏览器控件的链接为那个浏览器的链接即可
//最后改公告去我的收藏更改即可
//如果要加图，自己弄上收藏那里即可


【悬浮触屏滑动代码】
.在屏幕上滑动时候
f(st_eA == 2)
{
.计算当前滑动的距离，如果滑动距离短就不移动了
s-(st_rX, sss.rX, x)
s-(st_rY, sss.rY, y)

.判断是否够格移动悬浮
f(sss.rXY == true || x>80 || x<-80 || y>80 || y<-80)
{
.记录本次直到结束释放触屏都可移动悬浮
sss rXY = true
.悬浮拖动的位置偏移
s-(40, st_rX)
s-(80, st_rY)
.设置悬浮位置
us(sss.v, "x", st_rX)
us(sss.v, "y", st_rY)
.刷新悬浮
uxf(sss.v)
}
}
else f(st_eA == 0)
{
.当按下屏幕时候记录开始的坐标
sss rX = st_rX
sss rY = st_rY
.初始化
sss rXY = false
}

//把上面代码写入悬浮界面要滑动的控件的触屏监听事件里面
//悬浮返回赋值改成sss.v
//如果代码不会使用请加群求助


【软件更新实例】
t()
{
hs("这里是更新链接",gx)
//更新链接可以去我的磨弄
sj(gx,"更新版本《","》更新版本",gxbb)
sj(gx,"更新内容《","》更新内容",gxnr)
sj(gx,"更新链接《","》更新链接",gxlj)
f(gxbb!=null)
{
f(gxbb>1.1)
//1.1为当前应用版本，注意要修改
{
ss("最新版本:"+gxbb,gxbb)
ufnsui()
{
utw(null, gxbb, gxnr, "下载", false, v)
{
ufnsui()
{
hw(gxlj)
}
}
}

}
}
}
//forest-群号:438802386



【打开滑动界面】

us(滑动界面控件,"currentitem",0)
//0可以更改，改成1、2、3测试下

【远程公告】
t()
{
hs("网址",a)
sj(a,"公告[","]公告",b)
sr(b,"<br/ >","\n",c)
f(b==null)
{
ufnsui()
{
tw("没有网络")
//没有网络的事件
}
}
else
{
ufnsui()
{
utw(17301651,"公告",c,"复制","取消",true,v)
{
sxb(c)
tw("已复制")
//复制事件
}
else
{
//取消事件
}
}
}
}
.默小言

【弹窗说明】

s a=null
.这里是弹窗图片
s b="登陆"
.这里是弹窗标题
s nr="mian.iyu"
.这里是弹窗的内容，可以输入界面名直接弹出界面
s button="取消"
utw(a,b,nr,button,false)
{
}
.false 是按下返回键不关闭弹窗
可以改成 true 按下返回键关闭弹窗

.by:cc



【在编辑框处插入文本】
s nr="内容"
.nr是插入的内容
s id=5
.id为编辑框id
ug(id,"*ionstart",start)
ug(id,"*ionend",end)
ug(id,"text",text)
slg(text,slte)
s(slte-start,start)
ssg(text,start,end,boo)
ss(boo nr,poo)
sr(text,boo,poo,textt)
us(id,"text",textt)
us(id,"*ion",end)
//插入内容的代码事例，by可怕的僵王博士，贴吧无耻求粉

【在编辑框光标处插入内容】
s nr="print"
.nr是插入的内容
s id=5
.id为编辑框id
ug(id,"*ionstart",start)
ug(id,"*ionend",end)
ug(id,"text",text)
slg(text,slte)
s(start-slte,start)
ssg(text,start,end,boo)
ss(boo nr,poo)
sr(text,boo,poo,textt)
us(id,"text",textt)
//插入内容的代码事例，by可怕的僵王博士

【转跳界面动画】
用法：
uigo("abc.iyu")
//输入跳转界面动画的序号；6 右往左推出效果
lan(6)

说明：
用于跳转界面时候进行的动画效果

提示：
0.淡入淡出效果 1.放大淡出效果 2.转动淡出效果1 3.转动淡出效果2 4.左上角展开淡出效果 5.压缩变小淡出效果 6.右往左推出效果 7.下往上推出效果 8.左右交错效果 9.放大淡出效果 10.缩小效果 11.上下交错效果

【侧滑窗体】
//2是侧滑栏的id
//中间的是添加的界面
addv(2,"a.iyu|b.iyu|c.iyu")

【用浏览器打开】

s a="网址"
hws(a)


【按两次(返回)键退出】
f(st_kC==4)
{
f(sss.exit==null)
{
sss exit=0
tw("再按一次返回键退出",0)
t()
{
stop(600)
sss exit=null
}
}
else
{
end()
}
}
//按两次返回键退出，以上代码请放入：界面事件→按键按下事件

扩展，连续点击两次退出
f(sss.exit==null)
{
sss exit=0
tw("再点击一次退出",0)
t()
{
stop(600)
sss exit=null
}
}
else
{
end()
}
//以上代码请放入某控件的事件中

【一键删除文件夹】
fn del(path)
t()
{
f(ss.path0==null)
{
fi(path,f)
f(f==false)
{
ufnsui()
{
tw("文件夹路径错误！")
}
ss path0=null
endcode
//判断是否为文件夹，否就停止运行
}
ss path0=path
//把实时要删的文件夹存到变量path0中
}

f(path?ss.path0)
{
//判断原要删的文件夹路径中是否包含有实时要删的文件夹路径，如果包含则执行下面的代码，否就表示原要删的文件夹已删除
fd(path,f)
//尝试删除该文件夹，返值到f
f(f==true)
{
//如果删除path文件夹成功则
ss("删除："+path+"  成功1！",k)
syso(k)
//打印删除的文件（夹）路径详情
slg(path,l)
slof(path,"/",l,l1)
//取路径path的倒数第一个字符"/"的位置
ssg(path,0,l1,path1)
//截取路径path的父目录
fn a.del(path1)
//开始新一轮的删除，以path1为叁数
endcode
}
//如果删除文件夹path失败，则表示path是一个非空文件夹，执行下面的循环删除里面的文件（夹）
fl(path,a)
for(b;a)
{
ss(path+"/"+b,path2)
fd(path2,f)
f(f==false)
{
fn a.del(path2)
//如果删除文件夹path2失败则重新以path2为叁数重新删除
endcode
}
ss("删除："+path2+"  成功！",k)
.syso(k)
//打印删除成功的文件（夹）路径
}
fn a.del(path)
endcode
//文件夹path里面的所有文件（夹）全删完后重新开始删除，传入叁数path
}
ss path0=null
ufnsui()
{
tw("删除完毕！")
}
}
end fn

//以上代码请放到模块a.myu里，如果你要改模块名称，请将上面代码里的3个a.del改一下

//以下代码放到按钮点击事件中,传入要删的文件夹调用上面的模块一键删除
s lj="/sdcard/abc"
.模块会自动判断路径的正确性以及是否是文件夹
fn a.del(lj)
.调用模块开始删除，原创


【api接口上传文件示例】
//这里以酷站网软盘（官网http://pan.kzwr.com/）为示例
t()
{
s api="http://sendfile.kzwr.com/Upload"
s file="/sdcard/1.jpg"
huf(api,"",file,"utf-8",f)
f(f==null)
{
ufnsui()
{
tw("上传失败！")
}
endcode
}
s o=","
sj(f,"",o,f)
ss("http://pan.kzwr.com/kzwrfs?fid="+f,downurl)
sxb(downurl)
ufnsui()
{
tw("上传成功！链接已复制到粘贴板！")
}
}

【远程弹窗公告】

t()
{
hs("这里是网址",a)
sj(a,"获取符","获取符",b)
ufnsui()
{
utw(null,"公告",b,"知道了",true,sb)
{
}
}


}

【编辑框字数显示】
//编辑框的文本更新之后事件

s bjk=1
//反馈编辑框ID
s wb=2
//显示字数的文本ID
s sx=150
//反馈内容字数大于150变成蓝色  (字数上限)
s sx1=15
//反馈内容字数大于15显示的颜色变成蓝色     (因为我反馈设置的是反馈内容不得少于15个字)
ug(bjk,"text",fankui)
slg(fankui,zfcd)

f(zfcd<=sx)
{
s(sx-zfcd,zs)
ss(zfcd+" / "+zs,zzs)
us(wb,"text",zzs)
us(wb, "textcolor", "#cacacaca")
f(zfcd>=sx1)
{
us(wb, "textcolor", "#ff97c9ff")
}

}
else f(zfcd>=sx)
{
s(sx-zfcd,zs1)
ss(zfcd+" / "+zs1,zzs1)
us(wb,"text",zzs1)
us(wb, "textcolor", "#ffff1700")
//设置字数显示颜色
}

// 作者：唯梦倾城

【图灵机器人API接入例子】
//图灵机器人API接入例子   


//小白还是不建议调用了
//先去图灵机器人官网注册一个账号，在机器人接入里面把API复制在下面设置API
//图灵机器人官网地址：http://www.tuling123.com
//API接入文档介绍：http://www.tuling123.com/html/doc/api.html
//下面的栗子是查天气和搜图搜车票，其他的只是截取不一样，可自行发挥，可以做聊天机器人。


s id=3
//内容输入框id

s key="这里写官网的key"
//因为接入次数有限就不提供key测试了，自己去官网注册获取吧！
t()
{
ug(id,"text",nr)
f(nr=="")
{
ufnsui()
{
tw("内容不能为空哦")
//内容为空提示
}
}
else
{
ufnsui()
{
us(id,"text","")
}
stobm(nr, "utf-8",nr1)
ss("http://www.tuling123.com/openapi/api?key="+key+"&info="+nr1,nr1)
hs(nr1, null, null, fh)
//判断是否包含链接
f(fh?""url")
{
sj(fh,"url":"",""}",wy)
ufnsui()
{
utw(null, "小豪", "亲，已帮你找到，是否立即打开", "立即打开",false, v) 
{
hw(wy)
} 
//这个是搜图还有车票什么的，有链接类的。
}

}
else
{
f(nr?"天气")
{
sj(fh,"text":"",""}",hf)
sr(hf,"<br>","\n",hf2)
sr(hf2,":","\n",hf2)
sr(hf2,";","\n",hf2)

ufnsui()
{
utw(null,nr,hf2,false, v)
{
}
//这里是天气，只是截取不一样，可以自己发挥.
}

}
else
{
ufnsui()
{
utw(null,"提示","其他自行发挥吧！",false, v)
{
}
}
}
//↑天气判断
}
}
}
}

//--------唯梦倾城

【邮箱反馈例子】

//Pre邮箱反馈
//和反馈字数显示搭配效果更佳☺
//Pre反馈不会的去
t()
{
s lx=5
//联系编辑框ID
s bjk=17
//反馈编辑框ID
s zx=15
//判断最小提交字数限制
s zd=150
//判断最大提交字数限制
ug(lx,"text",yhm)
ug(bjk,"text",fkly)
syso(ss.fkly)
syso(ss.fklyb)
ss fkly=fkly
//获取反馈信息
f(ss.fkly==ss.fklyb)
{
ufnsui()
{
us(bjk,"text","")
tw("请勿重复提交")
//判断同样内容是否重复提交
}

}
else
{

stobm(fkly, "utf-8", fkly1)
f(fkly==fkly1)
{
ufnsui()
{
tw("请正确输入反馈内容，勿扰！")
//判断是否包含中文
}
}
else
{

slg(fkly,zfcd)
f(zfcd<zx)
{
//判断是的大于15字数
ufnsui()
{
tw("反馈留言不得低于15个字符\n为防打扰，不便之处还请见谅!",1)
//低于最小字数提示
}
}
else
{
f(zfcd>zd)
{
ufnsui()
{
tw("反馈字数过多，请精简后再反馈吧！")
//超过最大字数提示
}
}
else
{
f(yhm=="")
{
s yhm="匿名"
//联系为空则为匿名
}

sjxx(11a)
sgsz(11a,2, 11d)
sl(11d,"\n",d11)
sgsz(d11,1,imei)
sgsz(d11,0,imei1)

sgsz(11a,1, 10d)
sl(10d,"\n",d01)
sgsz(d01,2,imei3)
sgsz(d01,3,imei4)

sgsz(11a,0, 9d)
sl(9d,"\n",d31)
sgsz(d31,0,imei5)

//获取/手机品牌/型号/分辨率宽高/cpu型号
ss("品牌："+imei+"    ----型号："+imei1+"     ----分辨率宽："+imei3+"     --分辨率高："+imei4+"      ----CPU型号："+imei5,shouji)
strim(yhm, yhm)
strim(fkly,fkly)
ss(fkly+"--------------------"+shouji,fkly)
s url="http://pre.im/feedback/add"
s url1="contact="
ss(url1+yhm+"&",url1)
s url2="content="
ss(url2+fkly,url2)
s url3="&app_key=04b41896351f054d4eb2ae20023956be"
s url4="&app_name=iapp辅助"
//不要拿这测试，不然是发到我邮箱里，不会的去上面的链接里看，在结合这里修改。
ss(url1+url2+url3+url4,urls)
hs(url,urls,"utf-8",urltxt)
f(urltxt=="1")
{
ufnsui()
{
tw("反馈成功！")
//反馈成功提示
ss ii=ii
ug(bjk,"text",fkl)
ss fklyb=fkl
us(bjk,"text","")
}

}
else
{
ufnsui()
{
tw("反馈失败,请检测当前网络状态")
//反馈失败提示
}
}



}
//是的大于最大字数限制
}
//判断是否小于最小字数限制
}
//判断是否包含中文
}
//反馈内容是否重复
}
//t线程

//---------------唯梦倾城

【反馈字数显示例子】
//反馈编辑框字数显示
//编辑框的文本更新之后事件

s bjk=1
//反馈编辑框ID
s wb=2
//显示字数的文本ID
s sx=150
//反馈内容字数大于150变成蓝色  (字数上限)
s sx1=15
//反馈内容字数大于15显示的颜色变成蓝色     (因为我反馈设置的是反馈内容不得少于15个字)
ug(bjk,"text",fankui)
slg(fankui,zfcd)

f(zfcd<=sx)
{
s(sx-zfcd,zs)
ss(zfcd+" / "+zs,zzs)
us(wb,"text",zzs)
us(wb, "textcolor", "#cacacaca")
f(zfcd>=sx1)
{
us(wb, "textcolor", "#ff97c9ff")
}

}
else f(zfcd>=sx)
{
s(sx-zfcd,zs1)
ss(zfcd+" / "+zs1,zzs1)
us(wb,"text",zzs1)
us(wb, "textcolor", "#ffff1700")
//设置字数显示颜色
}

【文本跑马灯例子】
//文本跑马灯显示
//设置在文本属性里面

width=-1
height=-2
//文本控件宽高
text=手机瞬间就三四节咳嗽咳嗽介绍介绍几款试卷是技术手机几十家睡觉死而殴斗搜儿忙你电脑疯闹吃你家饭可瑞康大家解放进房
//显示文本
textsize=15sp
//字体大小
singleline=true
//内容显示在同一行
ellipsize=marquee
//文本超长显示方式  跑马灯
marqueerepeatlimit=marquee_forever
//跑马灯显示次数   无限∞重复
focusableintouchmode=true
//获取焦点
.唯梦倾城

【文字逐渐缩小】
t()
{
s id=文本控件ID
s t=150
.设置文本字体初始大小
w(t>15)
.启用循环，当字体大小小于5时停止循环
{
s(t-2,t)
ufnsui()
{
us(id,"textsize",t)
}
stop(20)
.设置停顿间隔
}
}

【文字逐渐向右移动】
t()
{
s id=文本控件ID
s x=0
.设置文本的左边距离
ufnsui()
{
us(id,"layout_marginleft",x)
}
swh("pxw",w)
.获取屏幕宽
w(x<w)
{
stop(10)
.设置循环间隔
s(x+5,x)
ufnsui()
{
us(id,"layout_marginleft",x)
.设置文本控件方位
}
}
}

【文字逐渐向左移动】
t()
{
s id=控件id
s st=10
.这是停顿的间隔
swh("pxw",s)
ufnsui()
{
us(id,"layout_marginleft",s)
}
w(s>0)
{
s(s-5,s)
ufnsui()
{
us(id,"layout_marginleft",s)
}
stop(st)
}
}

【文字逐渐向左移动（无限循环）】
t()
{
s id=控件id
swh("pxw",w)
s s=w
ufnsui()
{
us(id,"layout_marginleft",s)
}
w(1==1)
{
f(s>0)
{
s(s-5,s)
ufnsui()
{
us(id,"layout_marginleft",s)
}
stop(10)
.循环间隔
}
else
{
s s=w
}
}
}

【判断文件是否存在】
s a="%xinl/gg.xinl"
//a是文件路径
fe(a,b)
f(b=="true")
{
ufnsui()
{
tw("文件存在")
//这里还可以添加其他代码
}
}
else
{
ufnsui()
{
tw("文件不存在")
//这里还可以添加其他代码
}
}

【时长转时间】
fn time(a)
s/(1000,a)
s(a/60/60,h)
s(a/60%60,m)
f(m<10)
{
  ss("0"+m,m)
}
s(a%60,s)
f(s<10)
{
  ss("0"+s,s)
}
ss(h+":"+m+":"+s,ss.time)
end fn
//以上代码放到模块中

调用方法：
s a=4567
fn 模块名.time(a)
tw(ss.time)

【判断手机系统版本】
sjxx(c)
sgsz(c,2,d)
sj(d,"\n",null,h)
sj(h,"\n",null,bb)
f(bb>=19)
{
//这里是系统高于或者等于安卓4.4执行事件
}
else
{
//这里是低于4.4执行事件，可以留空
}

【跳转到QQ转账和微信支付界面,以及跳转个人QQ或者支付宝的AA支付】
QQ转账

s qqpay="mqqapi://forward/url?url_prefix=aHR0cHM6Ly9tcXEudGVucGF5LmNvbS92Mi9oeWJyaWQvd3d3L21vYmlsZV9xcS9wYXltZW50L2luZGV4LnNodG1sP193dj0xMDI3JmZyb209MTMmX3ZhY2Y9cXc=&version=1&src_type=web"
sit(a,"action", "android.intent.action.VIEW")
sit(a,"data",qqpay)
uit(a, "chooser", "QQ转账")

AA支付

s qqpay="mqqapi://forward/url?url_prefix=aHR0cHM6Ly9tcXEudGVucGF5LmNvbS9hYV9kZXRhaWw/X3d2PTE3OTMmZj0zJm49N2FhajBrSFRnQ0NGN2JZUUNIUHBhWjlzd191MTFLLWlKQnhfNDN0X1Q3OCUzRA==&version=1&src_type=web"
sit(a,"action", "android.intent.action.VIEW")
sit(a,"data",qqpay)
uit(a, "chooser", "AA支付")

微信支付

s pay="weixin://wap/pay?prepayid%3Dwx201802082005364f54b54f880288375192&package=1327381405&noncestr=1518091536&sign=bdd16aae95aa663ff22e475bf884d3fc" 
sit(a,"action", "android.intent.action.VIEW")
sit(a,"data",pay)
uit(a, "chooser", "微信支付")

支付宝AA支付

s pay="alipays://platformapi/startapp?appId=60000154&url=%2Fwww%2Findex%2Fdetail.htm%3FbatchNo%3D20180429000750021000710012618217%26token%3Dq4kdwhxt%26source%3DqrCode"
sit(a,"action", "android.intent.action.VIEW")
sit(a,"data",pay)
uit(a, "chooser", "支付宝AA支付")

【隐藏浏览器控件下方的放大和缩小图标】
gvs(2,wv)

//2是浏览器控件id

java(ws,wv,”android.webkit.WebView.getSettings”)

java(null,ws,”android.webkit.WebSettings.setBuiltInZoomControls”,”boolean”,true)

java(null,ws,”android.webkit.WebSettings.setDisplayZoomControls”,”boolean”,false)

【沉浸式状态栏】
sss ys = "#009688"
//沉浸式状态栏颜色

sjxx(and)
sgsz(and,2,and)
sj(and,"\n",null,and)
sj(and,"\n",null,and)
f(and>=19)
{
uycl(sss.ys,false)
us(1,"background",sss.ys)
swh("pxhh",pxhh)
swh("pxh",pxh)
s(pxhh-pxh,ztl)
us(1,"height",ztl)
}
【判断是否有网络】
t()
{
s a = "http://www.baidu.com"
hs(a,b)
f(b==null)
{
ufnsui()
{
tw("无网络")
}
}
else
{
ufnsui()
{
tw("有网络")
}
}
}

【调用应用市场给本软件评分】
sit(a,"ACTION", "Intent.ACTION_VIEW")
sit(a,"data","market://details?id=com.iapc")
uit(a, "chooser", "选择操作方式")

必须在应用市场有你的软件，否则会提示没有该应用。

【搜索列表关键字的实现方法】
sl("蛋疼;鸡肋;鸡蛋;鸡皮疙瘩;蛋糕",";",so)
//分割一段内容为数组
for(k;so)
{
//循环判断是否包含需要搜索的内容
f(k?"蛋")
{
//打印包含蛋字的内容会打印蛋疼、鸡蛋、蛋糕
syso(k)
}
}


那怎么显示到列表呢？只需要把syso换成ula即可！

【调用其他程序分享文件代码】
sit(a, "action", "android.intent.action.SEND")
sit(a, "type", "*/*")
sit(a, "extra", "android.intent.extra.STREAM","/sdcard/iApp/Userimg/icon_iapp.png")
uit(a, "chooser", "分享") 

【post提交深度解析小白必看】
post在下面的内容我们就讲过，现在更彻底了讲一遍，保证你学会post提交数据！

post的是什么呢？post就是提交数据，提交内容给网站处理，然后获取返回的结果。类似登录功能，同理！

一般我们需要从网站获取源代码后才能知道该提交什么，接口是什么。
举个例子：我从某网站源代码中得出下列代码：

<form action="http://flmle.com/so.php"">
<input type="hidden" name="siteid" value="1000">
<input type="text" name="key" placeholder="输入关键字">
<input type="submit" value="搜索">
</form>

这是一个搜索表单（表单从form开头form结尾）

第一行：<form action="http://flmle.com/so.php">
其中action的这个地址就是提交的接口

第二行：<input type="hidden" name="id" value="1000">
表示这是一个隐藏的输入框 为什么要隐藏呢？因为不需要用户输入，但必须要提交。他的属性是id=1000
那就得出一个提交的内容

第三行： <input type="text" name="key" placeholder="输入关键字">
这是一个需要输入内容的输入框，他的属性是key，得出一个提交的内容：key=搜索关键字

第四行： <input type="submit" value="搜索">
这个完全不用管他，他是一个提交按钮，我们post的时候本身就是一个提交了，所以不需要他！

就这样得出post内容

hs("http://flmle.com/so.php","id=1000&key=搜索关键字","utf-8",ok)

提交的内容是通过&符号串联到一起的，不要写错！

ok就是返回的结果，你可以syso(ok)打印出来查看是否已经提交成功从而截取你需要的结果！

【随机启动语录】

sl("你爹|你大爷|你二爷|你大舅|你二舅|你大侄子","|",ok)
//分割为数组

sran(0,5,sj)
//生产1-6的随机数

sgsz(ok,sj,yes)
//随机访问语录

tw(yes)


【$私有文件夹的使用】
iAPP2.0中，有一个私有文件夹，但很多人都不知道有什么用。其实这个私有文件夹特别实用的，比如你要保存一些东西，但又不想让用户看到，可以保存到私有文件夹下哦。

私有文件夹的路径是：/data/data/安装包名/files

路径不用管，直接在保存文件加个$符号就行了。私有文件夹的好处是，用户没有Root权限是无法修改你保存的内容的。比如一些txt文件等，若你保存在%手机内存里，那么很可能被人修改或者看到哦！

【给编辑框添加滚动条方法】
在使用编辑框的时候难免会遇到一个有点蛋疼的问题，编辑框没有滚动条而且主要的是编辑框下滑速度不忍直视，但一个方法即可解决。

首先添加一个滚动控件，在滚动控件里添加编辑框就行了。具体效果可参考iApc的内容预览。非常好用哦

【列表点击颜色的设置】
列表点击颜色有两种，一种是项目点击事件。

还有一种我比较推荐，就是在列表界面，给线性布局加点击事件，把背景设置为透明就

【修改浮动按钮背景/图片颜色】
gvs(4,fab)
java(图标颜色,null,"android.graphics.Color.parseColor","String","#009688")
java(背景颜色,null,"android.graphics.Color.parseColor","String","#00ff00")

java(null, fab, "android.widget.ImageView.setColorFilter", "int", 图标颜色)
java(背景颜色,null,"android.content.res.ColorStateList.valueOf","int",背景颜色)
java(null, fab, "android.support.design.widget.FloatingActionButton.setBackgroundTintList","android.content.res.ColorStateList",背景颜色)

【base64加解密】

//Base64编码：
s 原文 = "残页"
java(字节数组,原文,"java.lang.String.getBytes")
//转成byte[]字节数组
java(密文,null,"android.util.Base64.encodeToString","byte[]",字节数组,"int",0)
//Base64编码，0是模式
//如果失败请更改模式
/.
模式列表：
DEFAULT=0
NO_PADDING=1
NO_WRAP=2
CRLF=4
URL_SAFE=8
./
tw(密文)

//base64解码：
s 密文 = "5q6L6aG1"
java(字节数组,null,"android.util.Base64.decode","String",密文,"int",0)
//Base64解码，0是模式
//如果失败请更改模式
javanew(原文,"java.lang.String","byte[]",字节数组)
//由于返回的是byte[]字节数组，所以转化成字符串
tw(原文)

//作者:残页


【耳机是否插入】
java(音频管理器,activity,"android.content.Context.getSystemService","String","audio")
java(wh,音频管理器,"android.media.AudioManager.isWiredHeadsetOn")
ss("耳机插入状态为："+wh,so)
tw(so)

【获取当前应用悬浮窗权限】
java(opps,null,"android.provider.Settings.canDrawOverlays","android.content.Context",activity)
tw(opps)

【跳转悬浮窗设置界面】
sit(a, "action", "android.intent.action.VIEW")
sit(a, "action", "android.settings.action.MANAGE_OVERLAY_PERMISSION")
cls("android.content.ContextWrapper",类)
javax(one,activity,类,"getPackageName")
ss("package:"+one,pk)
sit(a, "data", pk)
uit(a, "chooser", "设置悬浮窗权限")

【自定义tws背景等】

//需要一个容器
gvs(1,view)
cls("android.support.design.widget.Snackbar",类)
//文本传入和时间
javax(snk,null,类,"make","android.view.View",view,"java.lang.CharSequence","Snkbar，后面number单位是毫秒","int",3000)
cls("android.view.View$OnClickListener", 事件类)
javacb(事件, 事件类)
{
s qun=123456789
ss("mqqapi://card/show_pslcard?src_type=internal&version=1&uin="+qun+"&card_type=group&source=qrcode",joinqq)
sit(a,"action", "android.intent.action.VIEW")
sit(a,"data",joinqq)
uit(a, "chooser", "选择QQ")
}
//按钮的文字
javax(null,snk,类,"setAction","java.lang.CharSequence","确定",事件类,事件)
//按钮的颜色
java(颜色,null,"android.graphics.Color.parseColor","String","#00ffff")
javax(null,snk,类,"setActionTextColor","int",颜色)
javax(get,snk,"android.support.design.widget.BaseTransientBottomBar","getView")
//us(get,"backgroundcolor","#ff3f51b5")
us(get,"background","@chbar.jpg")
//可以设置图片背景
//us(get,"height","300dp")
//可以设置高度
java(null, snk, "android.support.design.widget.BaseTransientBottomBar.show")
javags(id,null,"android.support.design.R$id","snackbar_text")
java(文本,get,"android.view.View.findViewById","int",id)
us(文本,"textcolor","#0000ff")
//文本颜色




【图片黑白化】

//sbp("@chbar.jpg",bmp)
tot(1, bmp)

java(宽, bmp, "android.graphics.Bitmap.getWidth")
java(高, bmp, "android.graphics.Bitmap.getHeight")

javags(config,null,"android.graphics.Bitmap$Config","RGB_565")
java(图片,null,"android.graphics.Bitmap.createBitmap","int",宽,"int",高,"android.graphics.Bitmap$Config",config)
javanew(画板,"android.graphics.Canvas","android.graphics.Bitmap",图片)
javanew(paint,"android.graphics.Paint")
javanew(cm,"android.graphics.ColorMatrix")
java(null,cm,"android.graphics.ColorMatrix.setSaturation","float",0)
javanew(cmcf,"android.graphics.ColorMatrixColorFilter","android.graphics.ColorMatrix",cm)
java(null,paint,"android.graphics.Paint.setColorFilter","android.graphics.ColorFilter",cmcf)
java(null,画板,"android.graphics.Canvas.drawBitmap","android.graphics.Bitmap",bmp,"float",0,"float",0,"android.graphics.Paint",paint)


us(2,"src",图片)




【获取当前软件相关信息】

javax(pm,activity,"android.content.ContextWrapper","getPackageManager")

javax(pknm,activity,"android.content.ContextWrapper","getPackageName")
//本应用包名
syso(pknm)

javax(ver,pm,"android.content.pm.PackageManager","getPackageInfo","String",pknm,"int",0)
javags(版本,ver,"android.content.pm.PackageInfo.versionName")
//本包名的版本
syso(版本)

javax(icon,pm,"android.content.pm.PackageManager","getApplicationInfo","String",pknm,"int",0)
javax(图标,icon,"android.content.pm.PackageItemInfo","loadIcon","android.content.pm.PackageManager",pm)
//本应用图标
syso(图标)

javags(pkg,ver,"android.content.pm.PackageInfo.applicationInfo")
javax(应用名称,pkg,"android.content.pm.PackageItemInfo","loadLabel","android.content.pm.PackageManager",pm)
//本应用名
syso(应用名称)


javags(time,ver,"android.content.pm.PackageInfo.lastUpdateTime")
javanew(格式, "java.text.SimpleDateFormat", "String", "yyyy年MM月dd日H时mm分ss秒")
javanew(时间, "java.util.Date", "long", time)
java(更新时间, 格式, "java.text.DateFormat.format", "java.util.Date", 时间)
//本应用最后一次更新时间
syso(更新时间)

【强制隐藏输入法】
java(acit,activity,"android.content.ContextWrapper.getApplicationContext")
java(windows,activity,"android.content.Context.getSystemService","String","input_method")
java(getact,activity,"android.app.Activity.getCurrentFocus")
java(win,getact,"android.view.View.getWindowToken")
java(null,windows,"android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow","android.os.IBinder",win,"int","0")

【获取电量信息】
javanew(intentFilter,"android.content.IntentFilter","String","android.intent.action.BATTERY_CHANGED")
java(batteryStatus,activity,"android.content.Context.registerReceiver","android.content.BroadcastReceiver",null,"android.content.IntentFilter",intentFilter)
//BATTERY_CHANGED是一个粘性广播，所以传null值就能拿到当前状态

java(status,batteryStatus,"android.content.Intent.getIntExtra","String","status","int",-1)
f(status == 2) {
  tw("充电中")
  } else f(status == 3 || status == 4) {
  tw("放电中")
  } else f(status == 5) {
  tw("已充满")
  }

java(plug,batteryStatus,"android.content.Intent.getIntExtra","String","plugged","int",-1)
f(plug == 1) {
  tw("AC充电中")
  } else f(plug == 2) {
  tw("USB充电中")
  } else f(plug == 4) {
  tw("无线充电中")
  }

java(level,batteryStatus,"android.content.Intent.getIntExtra","String","level","int",-1)
//当前电池电量
java(scale,batteryStatus,"android.content.Intent.getIntExtra","String","scale","int",-1)
//最大电池电量
ss("当前电池电量：" + level + "
最大电池电量：" + scale,msg)
tw(msg)


【文件夹相关操作】

s file="shixin/iapp"
fdir(file,uri)
javanew(file,"java.io.File","java.lang.String",uri)
//创建新的多级文件夹
java(创建多级判断,file,"java.io.File.mkdirs")
syso(创建多级判断)

//创建文件夹
java(创建文件夹判断,file,"java.io.File.mkdir")
syso(创建文件夹判断)

//判断文件夹是否存在
java(文件夹存在,file,"java.io.File.isDirectory")
syso(文件夹存在)

//删除文件夹,只能删除空文件夹
java(删除状态,file,"java.io.File.delete")
syso(删除状态)




【自定义utw弹窗】
cls("android.app.AlertDialog", 弹窗子类)
s cls = "android.app.AlertDialog$Builder"
cls(cls,弹窗类)
javanew(弹窗对象, 弹窗类, "android.content.Context", activity)
javax(null, 弹窗对象, cls, "setMessage","CharSequence","欢迎加入iapp大本营！")
//javax(null, 弹窗对象, cls, "setCancelable", "boolean", false)
//设置是否可以取消
javax(null,弹窗对象,cls,"setTitle","CharSequence","提示")
cls("android.content.DialogInterface$OnClickListener", 事件类)
javacb(点击事件, 事件类)
{
  end()
}
javacb(中间事件,事件类)
{
  end()
  }
javax(null, 弹窗对象, 弹窗类, "setNegativeButton", "CharSequence", "进入软件", 事件类, 中间事件)
javax(null, 弹窗对象, 弹窗类, "setPositiveButton", "CharSequence", "确定", 事件类, 点击事件)
javax(弹窗对象,弹窗对象,cls,"create")
java(null,弹窗对象,"android.app.Dialog.show")
//显示
//注意，以下所有代码必须在show之后调用！否则报错
javags(对话框,弹窗对象,"android.app.AlertDialog","mAlert")
javags(标题,对话框,"com.android.internal.app.AlertController","mTitleView")
//取得标题
us(标题,"textcolor","#E91E63")
javags(消息,对话框,"com.android.internal.app.AlertController","mMessageView")
//取得消息
us(消息,"textcolor","#E91E63")
javax(右边按钮, 弹窗对象, 弹窗子类, "getButton", "int", -1)
us(右边按钮, "textcolor", "#E91E63")
//设置按钮颜色
java(window,弹窗对象,"android.app.Dialog.getWindow")
javags(位置,null,"android.view.Gravity","CENTER")
/.TOP
CENTER
BOTTOM
RIGHT
LEFT
./
java(null,window,"android.view.Window.setGravity","int",位置)
//设置弹窗位置，不设置默认为CENTER
cls("android.view.WindowManager$LayoutParams",cls_lp)
java(lp,window,"android.view.Window.getAttributes")
zdp(-1,宽度)
javass(null,lp,"android.view.ViewGroup$LayoutParams","width",宽度)
//设置弹窗宽度
zdp(-1,高度)
javass(null,lp,"android.view.ViewGroup$LayoutParams","height",高度)
//设置弹窗高度
//弹窗的高度和宽度的单位为px，可以通过zdp把dp转换为px
javass(null,lp,"android.view.WindowManager$LayoutParams","y",0)
//设置y轴位置
javass(null,lp,"android.view.WindowManager$LayoutParams","x",0)
//设置x轴位置
java(null,window,"android.view.Window.setAttributes",cls_lp,lp)
//设置为自定义样式
java(win,弹窗对象,"android.app.Dialog.getWindow")
java(don,win,"android.view.Window.getDecorView")

s a = 0
s b = 40
s c = "#00000000"
s d = "#333333"
ngde(a, b, c, d, f)

//背景
us(don,"background",f)


【设置布局单个或多个圆角】
//iyu调用代码

call(null,"mjava","set.setBackground",activity,6,80,40,80,40,"#000000")


//新建一个set.mjava

import android.app.*;
import android.content.res.*;
import android.graphics.*;
import android.os.*;


public static void setBackground(Activity activity, int id, int yja, int yjb, int yjc, int yjd, String color)
{
  try
  {
     android.graphics.drawable.GradientDrawable shape = new android.graphics.drawable.GradientDrawable();
     shape.setShape(android.graphics.drawable.GradientDrawable.RECTANGLE);
     shape.setCornerRadii(new float[] { yja, yja, yjb, yjb, yjc, yjc, yjd, yjd });
     shape.setColor(Color.parseColor(color));
     shape.setStroke(0, Color.parseColor("#ffffff"));
     activity.findViewById(id).setBackgroundDrawable(shape);
  }
  catch (Exception e)
  {
  }
}


【修改浮动按钮颜色】
gvs(4,fab)
java(图标颜色,null,"android.graphics.Color.parseColor","String","#009688")
java(背景颜色,null,"android.graphics.Color.parseColor","String","#00ff00")

java(null, fab, "android.widget.ImageView.setColorFilter", "int", 图标颜色)
java(背景颜色,null,"android.content.res.ColorStateList.valueOf","int",背景颜色)
java(null, fab, "android.support.design.widget.FloatingActionButton.setBackgroundTintList","android.content.res.ColorStateList",背景颜色)

【获取文件/文件夹创建时间】
fdir("%iApp/Userimg",file)

javanew(f,"java.io.File","java.lang.String",file)
java(cal,f,"java.util.Calendar.getInstance")
java(time,f,"java.io.File.lastModified")
java(null,cal,"java.util.Calendar.setTimeInMillis","long",time)
java(tims,cal,"java.util.Calendar.getTime")
javanew(格式, "java.text.SimpleDateFormat", "String", "yyyy年MM月dd日 HH时mm分ss秒")
java(时间, 格式, "java.text.DateFormat.format", "java.util.Date", tims)

syso(时间)

【调整当前屏幕亮度】
java(window,activity,"android.app.Activity.getWindow")
java(lp,window,"android.view.Window.getAttributes")
//0-1之间
javass(nu,lp,"android.view.WindowManager$LayoutParams","screenBrightness",0.55)
javax(null,window,"android.view.Window","setAttributes","android.view.WindowManager$LayoutParams",lp)

【高斯模糊】
s 路径="%tumblr/6f319d21-827c-486d-9ecf-11541aaea3c2.jpg"
s 半径="4"
s 模糊度 ="5"

cls("android.graphics.Bitmap",图像类)
cls("android.renderscript.RenderScript",高斯类)
cls("android.renderscript.Element",指针类)
cls("android.renderscript.ScriptIntrinsicBlur",模糊类)
cls("android.renderscript.Allocation",计算类)

sbp(路径,img)
javax(bmpw, img, 图像类,"getWidth")
s(bmpw/半径,bmpw)
javax(bmph, img, 图像类,"getHeight")
s(bmph/半径,bmph)

javax(img,null,图像类,"createScaledBitmap",图像类,img,"int",bmpw,"int",bmph,"boolean",false)
javax(rs,null,高斯类,"create","android.content.Context",activity)
javax(eme,null,指针类,"U8_4",高斯类,rs)
javax(sb,null,模糊类,"create",高斯类,rs,指针类,eme)

javax(inp,null,计算类,"createFromBitmap",高斯类,rs,图像类,img)
javax(inpget,inp,计算类,"getType")
javax(otp,null,计算类,"createTyped",高斯类,rs,"android.renderscript.Type",inpget)

javax(null,sb,模糊类,"setRadius","float",模糊度)
javax(null,sb,模糊类,"setInput",计算类,inp)
javax(null,sb,模糊类,"forEach",计算类,otp)
javax(null,otp,计算类,"copyTo",图像类,img)

javax(null,rs,高斯类,"destroy")
java(null,sb,"android.renderscript.BaseObj.destroy")

//最后输出img，可以设置src或者bg
us(1,"background",img)

【编辑框错误提示】
gvs(2,编辑框)
java(null,编辑框,"android.widget.TextView.setError","CharSequence","错误提示")

【普通列表快速拖动条】
gvs(12,列表)
java(null,列表,"android.widget.AbsListView.setFastScrollEnabled","boolean","true")
//v7列表不能用
//拖动条默认颜色为白色，在列表大于一定数量才有

【控件透明度】
gvs(1,控件)
//0-1之间
java(null,控件,"android.view.View.setAlpha","float",0.5)

【判断vpn是否开启】
s isVpn = false
java(nis,null,"java.net.NetworkInterface.getNetworkInterfaces")
f(nis != null){
  java(list,null,"java.util.Collections.list","java.util.Enumeration",nis)
  for(ni;list){
    java(up,ni,"java.net.NetworkInterface.isUp")
    java(ia,ni,"java.net.NetworkInterface.getInterfaceAddresses")
    java(size,ia,"java.util.List.size")
    f(up && size != 0){
      java(name,ni,"java.net.NetworkInterface.getName")
      f(name == "tun0" || name == "ppp0"){
        s isVpn = true
        break
        }
      }
    }
  }
f(isVpn==true)
{
  syso("有抓包")
  tw("网络错误")
  end()
  endcode
}
else
{
  syso("没有抓包")
}


【java修改图片颜色】
gvs(8,view)

java(c,null,"android.graphics.Color.parseColor","String","#212121")
javags(mode,null,"android.graphics.PorterDuff$Mode","SRC_ATOP")
java(null,view,"android.widget.ImageView.setColorFilter","int",c,"android.graphics.PorterDuff$Mode",mode)

【获取手机电量】
java(管理器,activity,"android.app.Activity.getSystemService","String","batterymanager")
//初始化
java(a,管理器,"android.os.BatteryManager.getIntProperty","int",4)
//获取剩余电量，加上%就是手机剩余的电量
tw(a)
【v7列表的多种用法】
//竖直列表
gvs(4,对象)
cls("android.support.v7.widget.RecyclerView",列表类)
cls("android.support.v7.widget.LinearLayoutManager",布局管理类)
javanew(布局,布局管理类,"Context",activity,"int",1,"boolean",false)
javax(null,对象,列表类,"setLayoutManager","android.support.v7.widget.RecyclerView$LayoutManager",布局)

//横向列表
gvs(4,对象)
cls("android.support.v7.widget.RecyclerView",列表类)
cls("android.support.v7.widget.LinearLayoutManager",布局管理类)
javanew(布局,布局管理类,"Context",activity,"int",0,"boolean",false)
javax(null,对象,列表类,"setLayoutManager","android.support.v7.widget.RecyclerView$LayoutManager",布局)

//网格列表
gvs(4,对象)
cls("android.support.v7.widget.RecyclerView",列表类)
cls("android.support.v7.widget.GridLayoutManager",布局管理类)
javanew(布局,布局管理类,"Context",activity,"int",3)
javax(null,对象,列表类,"setLayoutManager","android.support.v7.widget.RecyclerView$LayoutManager",布局)

//瀑布流
gvs(4,对象)
cls("android.support.v7.widget.RecyclerView",列表类)
cls("android.support.v7.widget.StaggeredGridLayoutManager",布局管理类)
javanew(布局,布局管理类,"int",2,"int",1)
javax(null,对象,列表类,"setLayoutManager","android.support.v7.widget.RecyclerView$LayoutManager",布局)


【java设置手机壁纸】
//初始化包
cls("android.app.WallpaperManager",wm)
cls("android.graphics.Bitmap",bitp)
cls("android.graphics.BitmapFactory",bfy)

//图片路径(/sdcard/+路径)
s path = "/sdcard/iApp/Userimg/icon_iapp.png"
//初始化壁纸工具
javax(Wallm,null,wm,"getInstance","Context",activity)
//初始化图片为Bitmap变量
javax(image,null,bfy,"decodeFile","String",path)
//设置壁纸
javax(null,Wallm,wm,"setBitmap",bitp,image)

//需要权限<uses-permission android:name="android.permission.SET_WALL_PAPER"/>应该是这个我手写的或者百度安卓设置壁纸权限


【图片圆角】
sbp("图片",bitmap)

java(res,activity,"android.content.Context.getResources")

java(sss.drawable,null,"android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory.*","android.content.res.Resources",res,"android.graphics.Bitmap",bitmap)

java(null,sss.drawable,"android.support.v4.graphics.drawable.RoundedBitmapDrawable.setCornerRadius","float",100)
//圆角度数

us(控件id,"background",sss.drawable)

【状态栏白底黑字】
java(cs, activity, "android.app.Activity.getWindow")
java(cs2, cs, "android.view.Window.getDecorView")
java(null, cs2, "android.view.View.setSystemUiVisibility", "int", "8192")
//设置状态栏透明(沉浸式)
java(null, cs, "android.view.Window.addFlags", "int", "67108864")

【输入法相关】

说明：此代码可以解决输入法弹出的时候遮住你的控件/让布局乱动的问题
//请根据需要，自行修改
s flag = 18
/.
可选值：
0 系统默认，由系统选择显示方式
2 当用户进入时，默认隐藏输入法
4 当用户进入时，默认显示输入法
16 输入法弹出时，调整空白区域来显示输入法。即使调整空白区域，输入法还是有可能遮挡一些有内容区域，这时用户就只有退出输入法才能看到这些被遮挡区域并进行交互。
18 与16相同，但是当用户进入时，默认隐藏输入法
20 与16相同，但是当用户进入时，默认显示输入法
32 输入法弹出时，顶起当前布局（更改布局高度，同时整个布局上移）
34 与32相同，但是当用户进入时，默认隐藏输入法
36 与32相同，但是当用户进入时，默认显示输入法
48 当输入法弹出时，什么也不做，直接让输入法覆盖界面
50 与48相同，但是当用户进入时，默认隐藏输入法
52 与48相同，但是当用户进入时，默认显示输入法
./
java(window,activity,"android.app.Activity.getWindow")
java(null,window,"android.view.Window.setSoftInputMode","int",flag)


【控件转图片】
gvs(1,控件)

java(宽,控件,"android.view.View.getWidth")
java(高,控件,"android.view.View.getHeight")
//这里我动态获取控件高度，你们可以自己填进去
/.
这里有几个问题
1.在载入事件不能获取，返回0
2.如果是滚动控件，列表控件等等可以滚动的控件，
获取的高度/不是真实高度宽度，最大只能获取到手机屏的宽高
造成转出来的图片只是已经显示出来的部分
可以用自己手动填入宽高来解决
./

javags(config,null,"android.graphics.Bitmap$Config","ARGB_4444")
//可选值ARGB_8888，ARGB_4444，RGB_565，ALPHA_8
//ARGB_8888画质最好，这里用ARGB_4444是为了节约内存

java(图片,null,"android.graphics.Bitmap.createBitmap","int",宽,"int",高,"android.graphics.Bitmap$Config",config)
f(图片 == null){
  tw("似乎出现问题了")
  endcode
  }
javanew(画板,"android.graphics.Canvas","android.graphics.Bitmap",图片)

java(null,控件,"android.view.View.draw","android.graphics.Canvas",画板)

us(6,"src",图片)

【禁止截图】
java(a,activity,"android.app.Activity.getWindow")
java(null,a,"android.view.Window.addFlags","int",8192)

【拉起iApp导入源码】
fdir("@a.iApp",位置)
//源码位置
javanew(位置,"java.io.File","String",位置)
java(uri,null,"android.net.Uri.fromFile","java.io.File",位置)
sit(a,"data",uri)
sit(a,"flags",268435456)
sit(a,"classname","com.iapp.app","com.iapp.app.logoActivity2")
sit(a, "action", "android.intent.action.VIEW")
java(null,activity,"Context.startActivity","android.content.Intent",a)
java(null,null,"android.content.Intent.createChooser","android.content.Intent",a,"String","iApp")

【MD风格提示】
//iyu调用代码
fn md.tw("MD提示！")

//新建一个md.myu
//mdtw
fn tw(show)
nvw(o,o,"线性布局","",obj)
nvw(o,obj,"线性布局","background=#323232",d)
swh("pxw",w)
us(d,"width",w)
nvw(o,d,"文本","linespacingextra=8\nlayout_margintop=14dp\nlayout_marginright=24dp\nlayout_marginbottom=10dp\nlayout_marginleft=24dp\ntextsize=14sp\ntextcolor=#ffffff",b)
us(b,"text",show)
call(toast,"mlua","lua.Toasts",obj)
end fn

//新建一个lua.mlua
function Toasts(cv)
--自定义tw
import "android.widget.*"
import "android.view.Gravity"
to=Toast(activity)
to:setGravity(Gravity.BOTTOM,0,0);
to:setView(cv)
to:show()
end


【mjava获取网络图片】
//iyu调用代码
t()
{
  //参数:图片URL直链
  s picurl="http://img6.bdstatic.com/img/image/public/20180814.jpg"
  call(back,"mjava","Http.getInternetPicture",picurl)
  ufnsui()
  {
    //背景可以设置哦
    us(1,"background",back)
  }
}

//新建一个Http.mjava

import android.app.*;
import android.content.*;
import android.graphics.*;
import android.net.*;
import java.io.*;
import java.net.*;
import android.graphics.drawable.*;

//获取网络图片
	public static BitmapDrawable getInternetPicture(String UrlPath) {  
        Bitmap bm = null;  
        String urlpath = UrlPath;  
        try {  
            URL uri = new URL(urlpath);  
            HttpURLConnection connection = (HttpURLConnection) uri.openConnection();
            connection.setRequestMethod("GET");  
            connection.setReadTimeout(5000);  
            connection.setConnectTimeout(5000);  
            connection.connect();  
			if (connection.getResponseCode() == 200) {  
                InputStream is = connection.getInputStream();  
                bm = BitmapFactory.decodeStream(is);  
            } else {
                bm = null;  
            }  
        } catch (MalformedURLException e) {  
            e.printStackTrace();  
        } catch (IOException e) {  
            e.printStackTrace();  
        }  
        return new BitmapDrawable(bm);  

    }
    

【java获取手机壁纸】
cls("android.app.WallpaperManager",class)
javax(wm,null,class,"getInstance","Context",activity)
javax(drawable,wm,class,"getDrawable")
us(5,"src",drawable)
【隐藏浏览器放大缩小按钮】
gvs(浏览器控件ID,wv)
java(ws,wv,"android.webkit.WebView.getSettings")
java(null,ws,"android.webkit.WebSettings.setBuiltInZoomControls","boolean",true)
java(null,ws,"android.webkit.WebSettings.setDisplayZoomControls","boolean",false)

【mjava调用图库】
//iyu
调用:
javags(agc,"android.content.Intent","android.content.Intent.ACTION_GET_CONTENT")
javanew(it,"android.content.Intent","String",agc)
java(c,it,"android.content.Intent.setType","String","image/*")
javags(ca,"android.content.Intent","android.content.Intent.CATEGORY_OPENABLE")
java(c,it,"android.content.Intent.addCategory","String",ca)
java(c,activity,"android.app.Activity.startActivityForResult","android.content.Intent",it,"int",2)

回调:
javags(er,activity,"android.app.Activity","RESULT_OK")
f(st_lC==er)
{
  f(st_sC==2)
  {
    java(uri,st_iT,"android.content.Intent.getData")
    call(path, "mjava", "uri.getRealPath", activity, uri)
    syso(path)
    us(2, "src", path)
    us(3, "text", path)
    //path为图片路径
  }
}





uri.mjava
//新建一个名为uri的mjava文件
import android.content.ContentUris;
import android.content.Intent;
import android.net.Uri;
import android.provider.DocumentsContract;
import android.provider.MediaStore;
import android.database.Cursor;
import android.content.Context;

public static String getRealPath(Context context, Uri uri)
{
  String imagePath = null;
  if(DocumentsContract.isDocumentUri(context, uri))
  {
    // 如果是document类型的Uri，则通过document id处理
            
    String docId = DocumentsContract.getDocumentId(uri);
           
    if ("com.android.providers.media.documents".equals(uri.getAuthority()))
            
    {
                
      String id = docId.split(":")[1];           
      String selection = MediaStore.Images.Media._ID + "=" + id;
  
      imagePath = getImagePath(context, MediaStore.Images.Media.EXTERNAL_CONTENT_URI, selection);
    }
            
    else if ("com.android.providers.downloads.documents".equals(uri.getAuthority()))
            
    {
                
      Uri contentUri = ContentUris.withAppendedId(Uri.parse("content://downloads/public_downloads"), Long.valueOf(docId));
      imagePath = getImagePath(context, contentUri, null);
    }
  }
  else if("content".equalsIgnoreCase(uri.getScheme()))
  {
    // content类型普通方式处理
    imagePath = getImagePath(context, uri, null);
  }
  else if("file".equalsIgnoreCase(uri.getScheme()))
  {
    // file类型直接获取图片路径
    imagePath = uri.getPath();
  }
  return imagePath;
}

public String getImagePath(Context context, Uri uri, String selection)
{
  String path = null;
  // 通过Uri和selection来获取真实的图片路径
  Cursor cursor = context.getContentResolver().query(uri, null, selection, null, null);
  if (cursor != null)
  {
    syso(cursor.moveToFirst());
    if (cursor.moveToFirst())
    {
      path = cursor.getString(cursor.getColumnIndex(MediaStore.Images.Media.DATA));
    }
    cursor.close();
  }
  return path;
}


【WebView网页放大缩小】
放大:
gvs(1,ss.wv)
java(c,ss.wv,"android.webkit.WebView.zoomIn")

缩小:
gvs(1,ss.wv)
java(c,ss.wv,"android.webkit.WebView.zoomOut")

【设置控件阴影】
gvs(2, 标题栏)
//2为控件
zdp(4, 标题栏阴影)
//4为阴影厚度
java(null,标题栏,"android.view.View.setElevation", "float",标题栏阴影)
【java获取视频任意一帧】
fdir("%a.mp4",路径)
javanew(mmr,"android.media.MediaMetadataRetriever")
java(null,mmr,"android.media.MediaMetadataRetriever.setDataSource","String",路径)
java(图片,mmr,"android.media.MediaMetadataRetriever.getFrameAtTime","long",0)
//%a.mp4为视频路径，最后的图片使用us就可以设置到src或者backound，最后的0换第0帧，可改变，但不得超过视频总帧数

【Toolbar设置返回键】
s id=3
//toolbar的id

utb(id)
java(mTba, activity, "android.support.v7.app.AppCompatActivity.getSupportActionBar")
java(null, mTba, "android.support.v7.app.ToolbarActionBar.setDisplayHomeAsUpEnabled", "boolean", true)
//设置左边为返回键

utb("set", "leftck", id)
{
  tw("返回")
}

【Toolbar标题栏图标颜色】
s id=3
//toolbar的id

utb(id)

gvs(id, mTba)

javags(mMode, null, "android.graphics.PorterDuff$Mode", "SRC_ATOP")

java(颜色,null,"android.graphics.Color.parseColor","String","#ffffff")
//颜色

java(mTbaBackSrc, mTba, "android.support.v7.widget.Toolbar.getNavigationIcon")
java(null, mTbaBackSrc, "android.graphics.drawable.Drawable.setColorFilter", "int", 颜色, "android.graphics.PorterDuff$Mode", mMode)

java(mTbaMenuSrc, mTba, "android.support.v7.widget.Toolbar.getOverflowIcon")
java(null, mTbaMenuSrc, "android.graphics.drawable.Drawable.setColorFilter", "int", 颜色, "android.graphics.PorterDuff$Mode", mMode)
